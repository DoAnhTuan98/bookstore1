{"version":3,"sources":["constants/config.js","utils/apiCaller.js","actions/index.js","constants/ActionTypes.js","components/client/SignIn.js","components/client/SignUp.js","components/Burger.js","components/client/User.js","components/client/Nav.js","components/client/Cart.js","components/client/QuantityAdjustment.js","components/client/CartItem.js","components/client/CartBtn.js","components/client/ProductView.js","components/client/RelateItems.js","components/admin/ButtonDelete.js","components/client/Product.js","pages/client/Detail.js","components/client/Banner.js","components/client/Header.js","components/client/Category.js","components/client/Pagination.js","components/NotFound.js","components/client/Products.js","components/client/Main.js","pages/client/Home.js","components/client/UserSideBar.js","components/client/CheckoutForm.js","pages/client/Checkout.js","pages/client/OderReceived.js","components/client/OrderDetails.js","components/client/Order.js","pages/client/Orders.js","pages/client/UserProfile.js","pages/admin/AdminLogin.js","components/admin/Header.js","components/admin/NavAdmin.js","components/admin/Filter.js","components/admin/Search.js","components/admin/ButtonAddCategory.js","components/admin/TaskBar.js","components/admin/Main.js","components/admin/ProductFunc.js","pages/admin/Products.js","pages/admin/Orders.js","pages/admin/Customers.js","components/admin/Statistic.js","components/admin/Sale.js","pages/admin/Admin.js","components/admin/CategoryFunc.js","pages/admin/Category.js","routes.js","reducers/toggleCartitem.js","reducers/changeForm.js","reducers/products.js","reducers/cart.js","reducers/toggleProfileForm.js","reducers/user.js","reducers/order.js","reducers/isCheckout.js","reducers/customers.js","reducers/isOpenFormProduct.js","reducers/isOpenFormCategory.js","reducers/productEditing.js","reducers/category.js","reducers/index.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","callApi","endpoint","a","method","body","axios","url","Config","data","console","log","actFilterCategory","products","type","actGetAllProductRequest","dispatch","res","actGetAllProduct","actFindProductRequest","name","product","actFindProduct","actAddToCart","quantity","actDecreaseCart","actDeleteCart","actLogin","user","actGetAllOrder","orders","actGetAllOrderRequestAdmin","actGetAllOrderAdmin","actUpdateUser","actGetAllCustomersRequest","customers","actGetAllCustomers","actFilterProductsAdmin","actFilterProductByNameAdmin","actFilterOrders","actFilterCustomers","actDeleteProduct","actAddProduct","actUpdateProduct","actGetAllCategoryRequest","category","actGetAllCategory","actAddCategory","actDeleteCategory","actFilterCategoryAdmin","SignIn","pros","validate","email","password","emailError","passwordError","setState","emailErr","passwordErr","onHandleChange","e","target","value","state","onSubmit","preventDefault","then","props","onLogin","onCloseModal","catch","error","err","response","message","this","className","style","color","backgroundColor","textAlign","padding","borderRadius","Form","FormGroup","Label","for","Input","id","placeholder","onChange","Button","size","block","onClick","onOpenFormSignUp","Component","connect","REGEX_EMAIL","SignUp","address","phone","nameError","validateFn","addressError","phoneError","nameErr","addressErr","phoneErr","handleChange","handleSubmit","callAPI","onOpenFormSignIn","input","info","length","charAt","toUpperCase","slice","isValidEmail","test","autoComplete","Burger","statusProfileForm","display","flexDirection","justifyContent","alignItems","height","marginLeft","User","onToggleProfileForm","onLogout","to","Nav","toggle","modal","closeModel","handleOnclick","onCheckoutClick","form","JSON","parse","localStorage","getItem","token","accessToken","externalCloseBtn","position","top","right","width","opacity","alt","src","Modal","isOpen","external","isCheckout","Cart","openCartItem","totalQuantity","cart","forEach","element","totalPrice","price","icon","faShoppingBag","statusCartItem","QuantityAdjustment","cartCurrently","onAddToCart","onDecreaseCart","faMinus","faPlus","CartItem","closeCartItem","handleClick","isToken","onDeleteCart","cartItems","map","item","key","_id","img","faTimes","fontSize","fontWeight","CartBtn","onCartBtnClick","find","undefined","faShoppingBasket","ProductView","setShow","isShow","Container","fluid","Row","Col","xl","lg","textDecoration","faArrowLeft","author","des","RelateItems","showProduct","ButtonDelete","deleteProduct","onDeleteCategory","faTrashAlt","Product","onGetProductUpdate","onOpenFormProduct","sm","Detail","relateitems","filter","result","index","match","params","onGetAllProducts","Banner","handeChange","keyword","onFindProduct","faSearch","Header","Category","onFilterProducts","paginate","faThLarge","Pagination","showPageNumbers","pageNumbers","number","perPage","totalProducts","i","Math","ceil","push","NotFound","onGetAllProduct","faChevronLeft","Products","children","Main","showProducts","Home","onGetOneProduct","currentPage","onGetAllCategory","indexOfLastProduct","indexOfFirstProduct","currentProducts","statusAlert","actFilterCategoryRequest","actGetOneProduct","UserSideBar","CheckoutForm","event","stripe","elements","order","redirect","payment","onCreateOrder","onRemoveAllCart","removeItem","onCloseCartItem","createPaymentMethod","card","getElement","CardElement","paymentMethod","post","amount","id_neworder","onHandleInput","date","cartItem","today","Date","getFullYear","getMonth","getDate","check","faMoneyBillAlt","faCreditCard","marginTop","disabled","Checkout","history","actCreateOrder","OrderReceived","orderCurrently","OrderDetails","showItems","scope","indexOrderSelected","orderSelected","Fragment","Progress","faCheck","Table","Order","onGetIndexOrderSelected","Orders","showOrder","getIndexOrderSelected","onGetAllOrders","actGetAllOrderRequest","Userprofle","onUpdateUser","page","newUserInfo","oldUser","userUpdated","AdminLogin","usename","usernameError","username","account","admin","adminToken","setItem","isLogin","showLinkItem","nav","path","text","faDiceD6","faCalendarCheck","faUsers","faSignOutAlt","Filter","getFilter","handeChangeFilterPrice","handeChangePayment","keyword_email","onFilterOrders","getFilterOrders","handeChangeAmount","showOption","list","orderAmount","Search","handleChangeProducts","onFilterProductsByName","getKeyword","handleChangeOrders","getKeywordOrders","handleChangeCustomers","onFilterCustomers","handleChangeCategory","onFilterCategory","keyword_product","keyword_order","keyword_customer","keyword_category","maxWidth","ButtonAddCategory","onToggleFormCategory","TaskBar","showTaskBar","option","priceType","ProductFunc","priceErr","desErr","categoryErr","authorErr","onCloseFormProduct","onResetProductUpdate","isEmpty","obj","hasOwnProperty","handleImage","file","files","formData","FormData","append","url_img","handleClickCreateOrUpdateProduct","isValidate","onUpdateProduct","onAddProduct","productEditing","isOpenFormProduct","isClick","left","margin","overflow","accept","faCloudUploadAlt","actFilterProductsAdminRequest","actFilterProductByNameAdminRequest","actGetProductUpdate","actDeleteProductRequest","maxHeight","payment_method","actFilterOrdersRequest","Customers","totalAmount","arr","onGetAllCustomers","customer","totalOrder","actFilterCustomersRequest","Statistic","title","background","split","faArrowUp","Sale","revenue","reduce","current","temp","parts","orderDay","month","months","accumulator","currentValue","parseInt","series","options","colors","grid","show","chart","toolbar","foreColor","plotOptions","bar","dataLabels","horizontal","columnWidth","enabled","stroke","xaxis","categories","labels","yaxis","formatter","val","trunc","fill","tooltip","fillSeriesColor","y","seriesName","Admin","statistics","faDollarSign","faCartArrowDown","faUserCircle","faTruck","statistic","md","CategoryFunc","isvalid","onAddCategory","isOpenFormCategory","newCategory","actAddCategoryRequest","actDeleteCategoryRequest","actFilterCategoryAdminRequest","routes","exact","main","statusCartitem","actions","changeForm","initialstate","findIndex","splice","indexProductUpdate","findProductInState","stringify","userLogin","appReducers","combineReducers","stripePromise","loadStripe","store","createStore","applyMiddleware","thunk","App","showContentMenus","route","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d7ef4371.chunk.js","sourcesContent":["export const API_URL = 'http://localhost:9000';\r\n","import axios from 'axios';\r\nimport * as Config from '../constants/config'; // URL\r\n\r\nexport default async function callApi(endpoint, method = 'GET', body) {\r\n    try {\r\n        return axios({\r\n            method: method,\r\n            url: `${Config.API_URL}/${endpoint}`,\r\n            data: body\r\n        });\r\n    }\r\n    catch (err) {\r\n        console.log(err);\r\n    }\r\n}","import * as Types from '../constants/ActionTypes'\r\nimport callApi from '../utils/apiCaller'\r\n\r\nexport const actOpenCartItem = () => {\r\n    return {\r\n        type: Types.OPEN_CARTITEM\r\n    }\r\n}\r\n\r\nexport const actCloseCartItem = () => {\r\n    return {\r\n        type: Types.CLOSE_CARTITEM\r\n    }\r\n}\r\n\r\nexport const actOpenFormSignUp = () => {\r\n    return {\r\n        type: Types.OPEN_FORM_SIGNUP\r\n    }\r\n}\r\n\r\nexport const actOpenFormSignIn = () => {\r\n    return {\r\n        type: Types.OPEN_FORM_SIGNIN\r\n    }\r\n}\r\n\r\nexport const actFilterCategoryRequest = (category) => {\r\n    return async (dispatch) => {\r\n        const res = await callApi(`api/product?category=${category}`, 'GET', null)\r\n        let products = res.data\r\n        console.log(products)\r\n        dispatch(actFilterCategory(products))\r\n    }\r\n}\r\n\r\nexport const actFilterCategory = (products) => {\r\n    return {\r\n        type: Types.FILTER_CATEGORY,\r\n        products\r\n    }\r\n}\r\n\r\nexport const actGetAllProductRequest = () => {\r\n    return async (dispatch) => {\r\n        const res = await callApi('api/product', 'GET', null)\r\n        let products = res.data\r\n        dispatch(actGetAllProduct(products))\r\n    }\r\n}\r\n\r\nexport const actGetAllProduct = (products) => {\r\n    return {\r\n        type: Types.GET_ALL_PRODUCT,\r\n        products\r\n    }\r\n}\r\n\r\nexport const actFindProductRequest = (name) => {\r\n    return async (dispatch) => {\r\n        const res = await callApi(`api/product?name=${name}`)\r\n        let product = res.data\r\n        dispatch(actFindProduct(product))\r\n    }\r\n}\r\n\r\nexport const actFindProduct = (product) => {\r\n    return {\r\n        type: Types.FIND_PRODUCT,\r\n        product\r\n    }\r\n}\r\n\r\nexport const actAddToCart = (product, quantity) => {\r\n    return {\r\n        type: Types.ADD_TO_CART,\r\n        product,\r\n        quantity\r\n    }\r\n}\r\n\r\nexport const actDecreaseCart = (product, quantity) => {\r\n    return {\r\n        type: Types.DECREASE_CART,\r\n        product,\r\n        quantity\r\n    }\r\n}\r\n\r\nexport const actDeleteCart = (product) => {\r\n    return {\r\n        type: Types.DELETE_CART,\r\n        product\r\n    }\r\n}\r\n\r\nexport const actRemoveAllCart = () => {\r\n    return {\r\n        type: Types.REMOVE_ALL_CART\r\n    }\r\n}\r\n\r\nexport const actGetOneProduct = (id) => {\r\n    return {\r\n        type: Types.GET_ONE_PRODUCT,\r\n        id\r\n    }\r\n}\r\n\r\nexport const actCartBtnClick = () => {\r\n    return {\r\n        type: Types.CARTBTN_CLICK\r\n    }\r\n}\r\n\r\nexport const actToggleProfileForm = () => {\r\n    return {\r\n        type: Types.TOGGLE_PROFILE_FORM\r\n    }\r\n}\r\n\r\nexport const actLoginRequest = (account) => {\r\n    return (dispatch) => {\r\n        callApi('api/auth/sign-in', 'POST', account).then(res => {\r\n            dispatch(actLogin(res.data)) // res.data = user\r\n        }).catch(error => console.log(error.response.data.message))\r\n    }\r\n}\r\n\r\nexport const actLogin = (user) => {\r\n    return {\r\n        type: Types.LOGIN,\r\n        user\r\n    }\r\n}\r\n\r\nexport const actLogout = () => {\r\n    return {\r\n        type: Types.LOGOUT\r\n    }\r\n}\r\n\r\nexport const actCreateOrder = (order) => {\r\n    return {\r\n        type: Types.CREATE_ORDER,\r\n        order\r\n    }\r\n}\r\n\r\nexport const actGetAllOrderRequest = (user) => {\r\n    return async (dispatch) => {\r\n        console.log(user.email)\r\n        const res = await callApi(`api/order?email=${user.email}`, 'GET', null)\r\n        let orders = res.data\r\n        console.log(orders)\r\n        dispatch(actGetAllOrder(orders))\r\n    }\r\n}\r\n\r\nexport const actGetAllOrder = (orders) => {\r\n    return {\r\n        type: Types.GET_ALL_ORDER,\r\n        orders\r\n    }\r\n}\r\n\r\nexport const actGetAllOrderRequestAdmin = (user) => {\r\n    return async (dispatch) => {\r\n        const res = await callApi(`api/order`, 'GET', null)\r\n        let orders = res.data\r\n        console.log(orders)\r\n        dispatch(actGetAllOrderAdmin(orders))\r\n    }\r\n}\r\n\r\nexport const actGetAllOrderAdmin = (orders) => {\r\n    return {\r\n        type: Types.GET_ALL_ORDER_ADMIN,\r\n        orders\r\n    }\r\n}\r\n\r\nexport const actUpdateUserRequest = (newUserInfo) => {\r\n    return async (dispatch) => {\r\n        const res = await callApi('api/auth/update-user', 'PUT', newUserInfo)\r\n        let oldUser = JSON.parse(localStorage.getItem('user'))\r\n        let token = oldUser.accessToken\r\n        let userUpdated = res.data\r\n        userUpdated.accessToken = token\r\n        dispatch(actUpdateUser(userUpdated))\r\n    }\r\n}\r\n\r\nexport const actUpdateUser = (user) => {\r\n    return {\r\n        type: Types.UPDATE_USERPROFILE,\r\n        user\r\n    }\r\n}\r\n\r\nexport const actCheckoutClick = () => {\r\n    return {\r\n        type: Types.CHECKOUT_CLICK\r\n    }\r\n}\r\n\r\nexport const actGetAllCustomersRequest = () => {\r\n    return async (dispatch) => {\r\n        const res = await callApi('api/auth', 'GET', null)\r\n        const customers = res.data\r\n        console.log(customers)\r\n        dispatch(actGetAllCustomers(customers))\r\n    }\r\n}\r\n\r\nexport const actGetAllCustomers = (customers) => {\r\n    return {\r\n        type: Types.GET_ALL_CUSTOMERS,\r\n        customers\r\n    }\r\n}\r\n\r\nexport const actFilterProductsAdminRequest = (keyword, category, priceType) => {\r\n    console.log(keyword, category, priceType)\r\n    return async (dispatch) => {\r\n        const res = await callApi(`api/product?name=${keyword}&category=${category}&sortBy=${priceType && priceType !== 'Price' ? 'price' : ''}&sort=${priceType && priceType !== 'Price' ? priceType : ''}`)\r\n        let products = res.data\r\n        dispatch(actFilterProductsAdmin(products))\r\n    }\r\n}\r\n\r\nexport const actFilterProductsAdmin = (products) => {\r\n    return {\r\n        type: Types.FILTER_PRODUCTS_ADMIN,\r\n        products\r\n    }\r\n}\r\n\r\nexport const actFilterProductByNameAdminRequest = (keyword) => {\r\n    return async (dispatch) => {\r\n        const res = await callApi(`api/product?name=${keyword}`)\r\n        let products = res.data\r\n        // console.log('kkk')\r\n        dispatch(actFilterProductByNameAdmin(products))\r\n    }\r\n}\r\n\r\nexport const actFilterProductByNameAdmin = (products) => {\r\n    return {\r\n        type: Types.FILTER_PRODUCTS_BY_NAME,\r\n        products\r\n    }\r\n}\r\n\r\nexport const actFilterOrdersRequest = (payment_method, amount, email) => {\r\n    if (payment_method === 'Payment Method') {\r\n        payment_method = ''\r\n    }\r\n    if (payment_method === 'Online Payment') {\r\n        payment_method = 'card'\r\n    }\r\n    else {\r\n        payment_method = 'cash'\r\n    }\r\n    console.log(payment_method)\r\n    return async (dispatch) => {\r\n        const res = await callApi(`api/order?email=${email}&payment=${payment_method}&sortBy=${amount && amount !== 'Amount' ? 'totalPrice' : ''}&sort=${amount}`)\r\n        let orders = res.data\r\n        dispatch(actFilterOrders(orders))\r\n    }\r\n}\r\n\r\nexport const actFilterOrders = (orders) => {\r\n    return {\r\n        type: Types.FILTER_ORDERS,\r\n        orders\r\n    }\r\n}\r\n\r\nexport const actFilterCustomersRequest = (name) => {\r\n    return async (dispatch) => {\r\n        const res = await callApi(`api/auth?name=${name}`)\r\n        let customers = res.data\r\n        dispatch(actFilterCustomers(customers))\r\n    }\r\n}\r\n\r\nexport const actFilterCustomers = (customers) => {\r\n    return {\r\n        type: Types.FILTER_CUSTOMERS,\r\n        customers\r\n    }\r\n}\r\n\r\nexport const actToggleFormProduct = () => {\r\n    return {\r\n        type: Types.TOGGLE_FORM_PRODUCT\r\n    }\r\n}\r\n\r\nexport const actGetProductUpdate = (product) => {\r\n    return {\r\n        type: Types.GET_PRODUCT_UPDATE,\r\n        product\r\n    }\r\n}\r\n\r\nexport const actResetProductUpdate = () => {\r\n    return {\r\n        type: Types.RESET_PRODUCT_UPDATE,\r\n    }\r\n}\r\n\r\nexport const actDeleteProductRequest = (product) => {\r\n    return async (dispatch) => {\r\n        let id = product._id\r\n        const res = await callApi(`api/product/${id}`,'DELETE',null)\r\n        // const products = await callApi('api/product','GET',null)\r\n        console.log(res.data)\r\n        dispatch(actDeleteProduct(res.data))\r\n    }\r\n   \r\n    \r\n}\r\n\r\nexport const actDeleteProduct = (product) => {\r\n    return {\r\n        type : Types.DELETE_PRODUCT,\r\n        product\r\n    }\r\n}\r\n\r\nexport const actAddProductRequest = (data) => {\r\n    return async (dispatch) => {\r\n        const res = await callApi('api/product', 'POST', data)\r\n        if(res) {\r\n            dispatch(actAddProduct(res.data))\r\n            dispatch(actToggleFormProduct())\r\n        }\r\n        // console.log(res.data)\r\n    }\r\n}\r\n\r\nexport const actAddProduct = (product) => {\r\n    return {\r\n        type : Types.ADD_PRODUCT,\r\n        product\r\n    }\r\n}\r\n\r\nexport const actUpdateProductRequest = (data) => {\r\n    return async (dispatch) => {\r\n        const res = await callApi('api/product', 'PUT', data)\r\n        if(res) {\r\n            dispatch(actUpdateProduct(res.data))\r\n            dispatch(actToggleFormProduct())\r\n        }\r\n        // console.log(res.data)\r\n    }\r\n}\r\n\r\nexport const actUpdateProduct = (product) => {\r\n    return {\r\n        type : Types.UPDATE_PRPODUCT,\r\n        product\r\n    }\r\n}\r\n\r\nexport const actToggleFormCategory = () => {\r\n    return {\r\n        type : Types.TOGGLE_FORM_CATEGORY\r\n    }\r\n}\r\n\r\nexport const actGetAllCategoryRequest = () => {\r\n    return async (dispatch) => {\r\n        const res = await callApi('api/category', 'GET', null)\r\n        let category = res.data\r\n        console.log(category)\r\n        \r\n        dispatch(actGetAllCategory(category))\r\n    }\r\n}\r\n\r\nexport const actGetAllCategory = (category) => {\r\n    return {\r\n        type: Types.GET_ALL_CATEGORY,\r\n        category\r\n    }\r\n}\r\n\r\nexport const actAddCategoryRequest = (data) => {\r\n    return async (dispatch) => {\r\n        console.log(data)\r\n        const res = await callApi('api/category','POST',data)\r\n        let newCategory = res.data\r\n        dispatch(actAddCategory(newCategory))\r\n    }\r\n}\r\n\r\nexport const actAddCategory = (category) => {\r\n    return {\r\n        type : Types.ADD_CATEGORY,\r\n        category\r\n    }\r\n}\r\n\r\nexport const actDeleteCategoryRequest = (id) => {\r\n    return async (dispatch) => {\r\n        const res = await callApi(`api/category/${id}`,'DELETE',null)\r\n        // const products = await callApi('api/product','GET',null)\r\n        console.log(res.data)\r\n        dispatch(actDeleteCategory(res.data))\r\n    }\r\n   \r\n    \r\n}\r\n\r\nexport const actDeleteCategory = (category) => {\r\n    return {\r\n        type : Types.DELETE_CATEGORY,\r\n        category\r\n    }\r\n}\r\n\r\nexport const actFilterCategoryAdminRequest = (name) => {\r\n    return async (dispatch) => {\r\n        const res = await callApi(`api/category?name=${name}`)\r\n        let category = res.data\r\n        dispatch(actFilterCategoryAdmin(category))\r\n    }\r\n}\r\n\r\nexport const actFilterCategoryAdmin = (category) => {\r\n    return {\r\n        type: Types.FILTER_CATEGORY_ADMIN,\r\n        category\r\n    }\r\n}","export const OPEN_CARTITEM = 'OPEN_CARTITEM'\r\nexport const CLOSE_CARTITEM = 'CLOSE_CARTITEM'\r\nexport const OPEN_FORM_SIGNUP = 'OPEN_FORM_SIGNUP'\r\nexport const OPEN_FORM_SIGNIN = 'OPEN_FORM_SIGNIN'\r\nexport const FILTER_CATEGORY = 'FILTER_CATEGORY'\r\nexport const GET_ALL_PRODUCT = 'GET_ALL_PRODUCT'\r\nexport const FIND_PRODUCT = 'FIND_PRODUCT'\r\nexport const ADD_TO_CART = 'ADD_TO_CART'\r\nexport const DECREASE_CART = 'DECREASE_CART'\r\nexport const DELETE_CART = 'DELETE_CART'\r\nexport const GET_ONE_PRODUCT = 'GET_ONE_PRODUCT'\r\nexport const CARTBTN_CLICK = 'CARTBTN_CLICK'\r\nexport const TOGGLE_PROFILE_FORM = 'TOGGLE_PROFILE_FORM'\r\nexport const LOGIN = 'LOGIN'\r\nexport const LOGOUT = 'LOGOUT'\r\nexport const CREATE_ORDER = 'CREATE_ORDER'\r\nexport const GET_ALL_ORDER = 'GET_ALL_ORDER'\r\nexport const REMOVE_ALL_CART = 'REMOVE_ALL_CART'\r\nexport const UPDATE_USERPROFILE = 'UPDATE_USERPROFILE'\r\nexport const CHECKOUT_CLICK = 'CHECKOUT_CLICK'\r\nexport const GET_ALL_ORDER_ADMIN = 'GET_ALL_ORDER_ADMIN'\r\nexport const GET_ALL_CUSTOMERS = 'GET_ALL_CUSTOMERS'\r\nexport const FILTER_PRODUCTS_ADMIN = 'FILTER_PRODUCTS_ADMIN'\r\nexport const FILTER_PRODUCTS_BY_NAME = 'FILTER_PRODUCTS_BY_NAME'\r\nexport const FILTER_ORDERS = 'FILTER_ORDERS'\r\nexport const FILTER_CUSTOMERS = 'FILTER_CUSTOMERS'\r\nexport const TOGGLE_FORM_PRODUCT = 'TOGGLE_FORM_PRODUCT'\r\nexport const GET_PRODUCT_UPDATE = 'GET_PRODUCT_UPDATE'\r\nexport const RESET_PRODUCT_UPDATE = 'RESET_PRODUCT_UPDATE'\r\nexport const DELETE_PRODUCT = 'DELETE_PRODUCT'\r\nexport const ADD_PRODUCT = 'ADD_PRODUCT'\r\nexport const UPDATE_PRPODUCT = 'UPDATE_PRODUCT'\r\nexport const UPDATE_OR_ADD_PRODUCT_SUCCESS = 'UPDATE_OR_ADD_PRODUCT_SUCCESS'\r\nexport const TOGGLE_FORM_CATEGORY = 'TOGGLE_FORM_CATEGORY'\r\nexport const GET_ALL_CATEGORY = 'GET_ALL_CATEGORY'\r\nexport const ADD_CATEGORY = 'ADD_CATEGORY'\r\nexport const DELETE_CATEGORY = 'DELETE_CATEGORY'\r\nexport const FILTER_CATEGORY_ADMIN = 'FILTER_CATEGORY_ADMIN'\r\n// export const CREATE_PRODUCT = 'CREATE_PRODUCT'\r\n// export const UPDATE_PRODUCT = 'UPDATE_PRODUCT'\r\n\r\n","import React, { Component } from 'react'\r\nimport { Form, FormGroup, Label, Input, Button } from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\nimport { actOpenFormSignUp } from '../../actions/index'\r\nimport '../../css/client/Authform.css'\r\nimport callApi from '../../utils/apiCaller'\r\n// import { Redirect } from 'react-router-dom'\r\n// import { browserHistory } from 'react-router';\r\nclass SignIn extends Component {\r\n    constructor(pros) {\r\n        super(pros)\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            emailErr: '',\r\n            passwordErr: '',\r\n            err: ''\r\n        }\r\n    }\r\n\r\n    validate = (email, password) => {\r\n        let emailError = '';\r\n        let passwordError = '';\r\n\r\n        if (!email) {\r\n            emailError = 'The email field is required.'\r\n        }\r\n        if (!password) {\r\n            passwordError = 'The password field is required.'\r\n        }\r\n\r\n        if (emailError || passwordError) {\r\n            this.setState({\r\n                emailErr: emailError,\r\n                passwordErr: passwordError\r\n            })\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    onHandleChange = (e) => {\r\n        let target = e.target\r\n        let name = target.name\r\n        let value = target.value\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n        console.log(this.state.email, this.state.password)\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault()\r\n        let { email, password } = this.state\r\n        let isValidate = this.validate(email, password)\r\n        if (isValidate) {\r\n            let account = {\r\n                email,\r\n                password\r\n            }\r\n            // this.props.onLogin(account)\r\n            callApi('api/auth/sign-in', 'POST', account).then(res => {\r\n                this.props.onLogin(res.data) // res.data = user\r\n                this.props.onCloseModal()\r\n\r\n            }).catch(error => this.setState({\r\n                err: error.response.data.message\r\n            }))\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        let { email, password, emailErr, passwordErr, err } = this.state\r\n        return (\r\n            <div className=\"Authform\">\r\n                <div className='header'>\r\n                    <h1>Chào mừng bạn</h1>\r\n                    <p>Đăng nhập với email & password</p>\r\n                </div>\r\n                {err && <div style={{\r\n                    color: \"rgb(97, 26, 21)\",\r\n                    backgroundColor: \"rgb(253, 236, 234)\",\r\n                    textAlign: \"center\",\r\n                    padding: \"15px\",\r\n                    borderRadius: \"4px\"\r\n                }}>{err}</div>}\r\n                <Form onSubmit={this.onSubmit}>\r\n                    <FormGroup>\r\n                        <Label for=\"Email\">Email</Label>\r\n                        <Input type=\"email\" name=\"email\" id=\"Email\" placeholder=\"EX: doanhtuan@gmail.com\" value={email} onChange={this.onHandleChange} />\r\n                        {emailErr && <div className=\"validation\">{emailErr}</div>}\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"Password\">Password</Label>\r\n                        <Input type=\"password\" name=\"password\" id=\"Password\" placeholder=\"EX: tuan123\" value={password} onChange={this.onHandleChange} />\r\n                        {passwordErr && <div className=\"validation\">{passwordErr}</div>}\r\n                    </FormGroup>\r\n                    <Button size=\"lg\" block type=\"submit\" className=\"btn\">Đăng nhập</Button>\r\n                </Form>\r\n                <div className=\"footer\">\r\n                    Bạn chưa có tài khoản?\r\n                    &nbsp;<span className=\"signup\" onClick={this.props.onOpenFormSignUp}>Đăng ký</span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onOpenFormSignUp: () => {\r\n            dispatch(actOpenFormSignUp())\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn)","import React, { Component } from 'react'\r\nimport { Form, FormGroup, Input, Label, Button } from 'reactstrap'\r\nimport '../../css/client/Authform.css'\r\nimport callAPI from '../../utils/apiCaller'\r\nconst REGEX_EMAIL = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\nclass SignUp extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n            address: '',\r\n            phone: '',\r\n            nameErr: '',\r\n            emailErr: '',\r\n            passwordErr: '',\r\n            addressErr: '',\r\n            phoneErr: '',\r\n            err: ''\r\n        }\r\n    }\r\n\r\n    validateFn(input = '', info = '') {\r\n        if (info === 'phone') {\r\n            if (!input) {\r\n                return `The ${info} field is required.`\r\n            }\r\n            if (input.length < 10) {\r\n                return `${info.charAt(0).toUpperCase() + info.slice(1)} must be at least 10 characters.`\r\n            }\r\n        }\r\n        if (info === 'email') {\r\n\r\n            if (!input) {\r\n                return `The ${info} field is required.`\r\n            }\r\n            let isValidEmail = REGEX_EMAIL.test(input)\r\n            if (!isValidEmail) {\r\n                return 'Invalid email'\r\n            }\r\n        }\r\n        else {\r\n            if (!input) {\r\n                return `The ${info} field is required.`\r\n            }\r\n            if (input.length < 6) {\r\n                return `${info.charAt(0).toUpperCase() + info.slice(1)} must be at least 6 characters.`\r\n\r\n            }\r\n            return '';\r\n        }\r\n    }\r\n\r\n    validate = (name, email, password, address, phone) => {\r\n        const nameError = this.validateFn(name, 'name') || '';\r\n        const emailError = this.validateFn(email, 'email') || '';\r\n        const passwordError = this.validateFn(password, 'password') || '';\r\n        const addressError = this.validateFn(address, 'address') || '';\r\n        const phoneError = this.validateFn(phone, 'phone') || '';\r\n        if (nameError || emailError || passwordError || addressError || phoneError) {\r\n            this.setState({\r\n                nameErr: nameError,\r\n                emailErr: emailError,\r\n                passwordErr: passwordError,\r\n                addressErr: addressError,\r\n                phoneErr: phoneError\r\n            })\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        let target = e.target\r\n        let name = target.name\r\n        let value = target.value\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        let { name, email, password, address, phone } = this.state\r\n        let isValidate = this.validate(name, email, password, address, phone)\r\n        let userInfo = {\r\n            name,\r\n            email,\r\n            password,\r\n            address,\r\n            phone\r\n        }\r\n        if (isValidate) {\r\n            callAPI('api/auth/sign-up', 'POST', userInfo).then(() => {\r\n                this.props.onOpenFormSignIn()\r\n            }).catch(error => this.setState({\r\n                err: error.response.data.message\r\n            }))\r\n        }\r\n    }\r\n    render() {\r\n        let {\r\n            name,\r\n            email,\r\n            password,\r\n            address,\r\n            phone,\r\n            nameErr,\r\n            emailErr,\r\n            passwordErr,\r\n            addressErr,\r\n            phoneErr,\r\n            err\r\n        } = this.state\r\n        return (\r\n            <div className=\"Authform\">\r\n                <div className=\"header\">\r\n                    <h1>Sign Up</h1>\r\n                    <p>By signing up, you agree to Pickbazar's</p>\r\n                </div>\r\n                {err && <div style={{\r\n                    color: \"rgb(97, 26, 21)\",\r\n                    backgroundColor: \"rgb(253, 236, 234)\",\r\n                    textAlign: \"center\",\r\n                    padding: \"15px\",\r\n                    borderRadius: \"4px\"\r\n                }}>{err}</div>}\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <FormGroup>\r\n                        <Label for=\"name\">\r\n                            Name\r\n                            <span className=\"ml-1 text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                            id=\"name\"\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            autoComplete=\"off\"\r\n                            value={name}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        {nameErr && <div className=\"validation\">{nameErr}</div>}\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"email\">\r\n                            Email\r\n                            <span className=\"ml-1 text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                            id=\"email\"\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            autoComplete=\"off\"\r\n                            value={email}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        {emailErr && <div className=\"validation\">{emailErr}</div>}\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"password\">\r\n                            Password\r\n                            <span className=\"ml-1 text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                            id=\"password\"\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            autoComplete=\"off\"\r\n                            value={password}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        {passwordErr && <div className=\"validation\">{passwordErr}</div>}\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"address\">\r\n                            Address\r\n                            <span className=\"ml-1 text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                            id=\"address\"\r\n                            type=\"text\"\r\n                            name=\"address\"\r\n                            autoComplete=\"off\"\r\n                            value={address}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        {addressErr && <div className=\"validation\">{addressErr}</div>}\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"phone\">\r\n                            Phone\r\n                            <span className=\"ml-1 text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                            autoComplete=\"off\"\r\n                            id=\"phone\"\r\n                            type=\"number\"\r\n                            name=\"phone\"\r\n                            value={phone}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        {phoneErr && <div className=\"validation\">{phoneErr}</div>}\r\n                    </FormGroup>\r\n                    <Button size=\"lg\" block type=\"submit\">\r\n                        Continue\r\n                    </Button>\r\n                </Form>\r\n                <div className=\"footer\">\r\n                    Already have an account?\r\n                    &nbsp;<span className=\"signin\" onClick={this.props.onOpenFormSignIn}>Sign In</span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignUp","import React, { Component } from 'react'\r\nimport '../css/Burger.css'\r\nclass Burger extends Component {\r\n\r\n    render() {\r\n        let { statusProfileForm } = this.props\r\n        return (\r\n            <div\r\n                className={statusProfileForm ? \"Burger toggle\" : \"Burger\"}\r\n                style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    padding: \"0\",\r\n                    height: \"auto\",\r\n                    marginLeft: \"5px\"\r\n                }}\r\n            >\r\n                <div className=\"line\"></div>\r\n                <div className=\"line\"></div>\r\n                <div className=\"line\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Burger","import React, { Component } from 'react'\r\nimport Burger from '../Burger'\r\nimport { Link } from 'react-router-dom'\r\nimport '../../css/client/User.css'\r\nclass User extends Component {\r\n    render() {\r\n        let { onToggleProfileForm, statusProfileForm, user, onLogout } = this.props\r\n        return (\r\n            <div className=\"User h-100\">\r\n                <div className=\"welcome\" onClick={onToggleProfileForm}>\r\n                    Hello {user.name}\r\n                    <Burger statusProfileForm={statusProfileForm} />\r\n                </div>\r\n                <ul className={statusProfileForm ? \"nav-links nav-active\" : \"nav-links\"}>\r\n                    <li className={statusProfileForm ? \"item-active\" : \"item\"}>\r\n                        <Link to=\"/profile\">Thông tin cá nhân</Link>\r\n                    </li>\r\n                    <li className={statusProfileForm ? \"item-active\" : \"item\"}>\r\n                        <Link to=\"/checkout\">Thanh toán</Link>\r\n                    </li>\r\n                    <li className={statusProfileForm ? \"item-active\" : \"item\"}>\r\n                        <Link to=\"/order\">Đơn hàng</Link>\r\n                    </li>\r\n                    <li className={statusProfileForm ? \"item-active\" : \"item\"}>\r\n                        <Link to=\"#\" onClick={onLogout}>Đăng xuất</Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default User","import React, { Component } from 'react'\r\nimport { Button, Modal } from 'reactstrap'\r\nimport SignIn from './SignIn'\r\nimport SignUp from './SignUp'\r\nimport User from './User'\r\nimport { Link } from 'react-router-dom'\r\nimport '../../css/client/Nav.css'\r\nimport { connect } from 'react-redux'\r\nimport { actOpenFormSignIn, actToggleProfileForm, actLogin, actLogout, actCheckoutClick    } from '../../actions/index'\r\n\r\nclass Nav extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            modal: false,\r\n        }\r\n    }\r\n\r\n    toggle = () => {\r\n        let modal = this.state.modal\r\n        this.setState({\r\n            modal: !modal\r\n        })\r\n    }\r\n\r\n    closeModel = () => {\r\n        this.setState({\r\n            modal: false\r\n        })\r\n    }\r\n\r\n    handleOnclick = () => {\r\n        this.props.onCheckoutClick()\r\n        this.props.onOpenFormSignIn()\r\n    }\r\n\r\n    render() {\r\n        let { form, onToggleProfileForm, statusProfileForm, onLogin, onLogout, onOpenFormSignIn, modal } = this.props\r\n        // let token = localStorage.getItem('token')\r\n\r\n        let user = JSON.parse(localStorage.getItem('user'))\r\n        let token = null\r\n        if (user) {\r\n            token = user.accessToken\r\n        }\r\n        const externalCloseBtn = <button className=\"auth close\" style={{ position: 'absolute', top: '15px', right: '15px', backgroundColor: '#fff', width: '32px', height: '32px', color: 'rgb(34, 34, 34)', borderRadius: '50%', opacity: '1' }} onClick={this.props.onCheckoutClick}>&times;</button>;\r\n        return (\r\n            <div className=\"Nav\">\r\n                <div className=\"logo\">\r\n                    <Link to=\"/\">\r\n                        <img alt=\"\" src=\"https://res.cloudinary.com/dofqucuyy/image/upload/v1585755124/Books/logo_gtuxyy.svg\" />\r\n                    </Link>\r\n                </div>\r\n                <div className=\"user-btn\">\r\n                    <Modal isOpen={modal} toggle={this.props.onCheckoutClick} className=\"modal-dialog modal-dialog-centered\" external={externalCloseBtn}>\r\n                        {\r\n                            form === 'signin' ? <SignIn onLogin={onLogin} user={user} onCloseModal={this.props.onCheckoutClick} /> : <SignUp onOpenFormSignIn={onOpenFormSignIn} />\r\n                        }\r\n                    </Modal>\r\n                    {\r\n                        !token ? <Button className=\"auth-btn\" onClick={this.handleOnclick}>Đăng nhập</Button> : <User onToggleProfileForm={onToggleProfileForm} statusProfileForm={statusProfileForm} user={user} onLogout={onLogout} />\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        form: state.Form,\r\n        statusProfileForm: state.statusProfileForm,\r\n        user: state.user,\r\n        modal: state.isCheckout\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onOpenFormSignIn: () => {\r\n            dispatch(actOpenFormSignIn())\r\n        },\r\n        onToggleProfileForm: () => {\r\n            dispatch(actToggleProfileForm())\r\n        },\r\n        onLogin: (user) => {\r\n            dispatch(actLogin(user))\r\n        },\r\n        onLogout: () => {\r\n            dispatch(actLogout())\r\n        },\r\n        onCheckoutClick: () => {\r\n            dispatch(actCheckoutClick())\r\n        },\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Nav)","import React, { Component } from 'react'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faShoppingBag } from \"@fortawesome/free-solid-svg-icons\";\r\nimport '../../css/client/Cart.css'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { actOpenCartItem } from '../../actions/index'\r\n\r\nclass Cart extends Component {\r\n    openCartItem = () => {\r\n        this.props.openCartItem()\r\n    }\r\n\r\n    totalQuantity = (cart) => {\r\n        let totalQuantity = null\r\n        cart.forEach(element => {\r\n            totalQuantity += element.quantity\r\n        });\r\n        return totalQuantity\r\n    }\r\n\r\n    totalPrice = (cart) => {\r\n        let totalPrice = null\r\n        cart.forEach(element => {\r\n            totalPrice += element.product.price * element.quantity\r\n        });\r\n        return totalPrice\r\n    }\r\n\r\n    render() {\r\n        let { cart } = this.props\r\n        return (\r\n            <div className={\"cart\"} onClick={this.openCartItem}>\r\n                <div className=\"item-amount\">\r\n                    <FontAwesomeIcon className=\"mr-2\" icon={faShoppingBag} />\r\n                    {cart.length > 0 ? this.totalQuantity(cart) : 0} {cart.length > 0 && this.totalQuantity(cart) < 2 ? 'item' : 'items'}\r\n\r\n                </div>\r\n                <div className=\"total-price\">\r\n                    <p>\r\n                        {/* ${cart !== undefined ? this.totalPrice(cart) : 0.00} */}\r\n                        ${cart.length > 0 ? this.totalPrice(cart) : 0}\r\n                        {/* $0.00 */}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        statusCartItem: state.statusCartItem\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        openCartItem: () => {\r\n            dispatch(actOpenCartItem())\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart)","import React, { Component } from 'react'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faMinus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport '../../css/client/QuantityAdjustment.css'\r\nclass QuantityAdjustment extends Component {\r\n    render() {\r\n        let { cartCurrently, product, type, onAddToCart, onDecreaseCart } = this.props\r\n        // console.log(cart, product)\r\n        // let id = product.id\r\n        // let cartCurrently = cart.find(element => element.product.id === id)\r\n        // console.log(cartCurrently)\r\n        // let quantity = cartCurrently.quantity\r\n        return (\r\n            <div className={type === \"cart\" ? \"QuantityAdjustment cart-style\" : \"QuantityAdjustment\"}>\r\n                <div className=\"decrease adj\" onClick={() => onDecreaseCart(product)}>\r\n                    <FontAwesomeIcon icon={faMinus} />\r\n                </div>\r\n                <div className=\"number\">{cartCurrently.quantity}</div>\r\n                <div className=\"increase adj\" onClick={() => onAddToCart(product)}>\r\n                    <FontAwesomeIcon icon={faPlus} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QuantityAdjustment","import React, { Component } from 'react'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faShoppingBag, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport '../../css/client/Cartitem.css'\r\nimport { connect } from 'react-redux'\r\nimport { actCloseCartItem, actCheckoutClick } from '../../actions/index'\r\nimport QuantityAdjustment from '../../components/client/QuantityAdjustment'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nclass CartItem extends Component {\r\n    constructor(pros) {\r\n        super(pros)\r\n        this.state = {\r\n            isToken: false\r\n        }\r\n    }\r\n\r\n    closeCartItem = () => {\r\n        this.props.closeCartItem()\r\n    }\r\n\r\n    totalPrice = (cart) => {\r\n        let totalPrice = null\r\n        cart.forEach(element => {\r\n            totalPrice += element.product.price * element.quantity\r\n        });\r\n        return totalPrice\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        e.preventDefault()\r\n        let user = JSON.parse(localStorage.getItem('user'))\r\n        if (user) {\r\n            this.setState({\r\n                isToken: true\r\n            })\r\n        }\r\n        else {\r\n            this.props.onCheckoutClick()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isToken) {\r\n            return <Redirect to=\"/checkout\" />\r\n        }\r\n        let { statusCartItem, cart, onAddToCart, onDecreaseCart, onDeleteCart } = this.props\r\n        let totalQuantity = null\r\n        cart.forEach(element => {\r\n            totalQuantity += element.quantity\r\n        });\r\n        let cartItems = cart.map(item =>\r\n            <div key={item.product._id} className=\"item\">\r\n                <QuantityAdjustment type=\"cart\" cartCurrently={item} onAddToCart={onAddToCart} onDecreaseCart={onDecreaseCart} product={item.product} />\r\n                <div className=\"img\">\r\n                    <img src={item.product.img} alt=\"\" />\r\n                </div>\r\n                <div className=\"info\">\r\n                    <div className=\"title\">{item.product.name}</div>\r\n                    <div className=\"price\">${item.product.price} </div>\r\n                    <div className=\"quantity\">{item.quantity} pc(s)</div>\r\n                </div>\r\n                <div className=\"total-price\">${item.product.price * item.quantity}</div>\r\n                <FontAwesomeIcon icon={faTimes} className=\"ml-4\" onClick={() => onDeleteCart(item.product)} />\r\n            </div>\r\n        )\r\n        return (\r\n            <div className={statusCartItem === true ? \"cart-item c-show\" : \"cart-item\"}>\r\n                <div className=\"header\">\r\n                    <div className=\"item-amount\">\r\n                        <FontAwesomeIcon className=\"mr-2\" icon={faShoppingBag} />\r\n                        {totalQuantity > 0 ? totalQuantity : 0} {totalQuantity < 2 ? 'item' : 'items'}\r\n                    </div>\r\n                    <FontAwesomeIcon icon={faTimes} className=\"close\" onClick={this.closeCartItem} />\r\n                </div>\r\n                <div className=\"body\">\r\n                    {\r\n                        cart.length === 0 && <span style={{\r\n                            fontSize: \"15px\",\r\n                            fontWeight: \"700\",\r\n                            color: \"rgb(119, 121, 140)\",\r\n                            display: \"block\",\r\n                            width: \"100%\",\r\n                            textAlign: \"center\",\r\n                            padding: \"40px 0px\"\r\n                        }}>\r\n                            Not Products found</span>\r\n                    }\r\n                    {cartItems}\r\n                </div>\r\n                <Link to=\"/checkout\" className={cart.length === 0 ? \"footer disable-btn\" : \"footer\"} onClick={this.handleClick}>\r\n                    <span style={{\r\n                        color: [cartItems.length === 0 ? 'rgb(0, 158, 127)' : '']\r\n                    }}>Thanh toán</span>\r\n                    <div className=\"total\">\r\n                        ${cart.length > 0 ? this.totalPrice(cart) : 0.00}\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        statusCartItem: state.statusCartItem\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        closeCartItem: () => {\r\n            dispatch(actCloseCartItem())\r\n        },\r\n        onCheckoutClick: () => {\r\n            dispatch(actCheckoutClick())\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CartItem)","import React, { Component } from 'react'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faShoppingBasket } from \"@fortawesome/free-solid-svg-icons\";\r\nimport QuantityAdjustment from './QuantityAdjustment'\r\nclass CartBtn extends Component {\r\n    render() {\r\n        let { type, onAddToCart, cart, product, onCartBtnClick, onDecreaseCart } = this.props\r\n        let cartCurrently = cart.find(element => element.product._id === product._id)\r\n        return (\r\n            <div className=\"cart-btn\">\r\n                {\r\n                    cartCurrently !== undefined ? <QuantityAdjustment cartCurrently={cartCurrently} product={product} onAddToCart={onAddToCart} onDecreaseCart={onDecreaseCart} /> :\r\n                        <button className={type === 'related' ? 'btn related' : 'btn'} onClick={(e) => { onAddToCart(product); e.preventDefault(); onCartBtnClick() }}>\r\n                            <FontAwesomeIcon icon={faShoppingBasket} />\r\n                            {\r\n                                type === 'related' ? <p>Thêm</p> : <p>Thêm vào giỏ hàng</p>\r\n                            }\r\n                        </button>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CartBtn","import React, { Component } from 'react'\r\nimport { Container, Row, Col } from 'reactstrap'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport '../../css/client/ProductView.css'\r\nimport '../../css/client/CartBtn.css'\r\nimport { Link } from 'react-router-dom'\r\nimport CartBtn from '../../components/client/CartBtn'\r\nclass ProductView extends Component {\r\n    constructor(pros) {\r\n        super(pros)\r\n        this.state = {\r\n            isShow: false\r\n        }\r\n    }\r\n    setShow = () => {\r\n        this.setState({\r\n            isShow: !this.state.isShow\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let { products, id, onAddToCart, cart, onCartBtnClick, onDecreaseCart } = this.props\r\n        let product = products.find(product => product._id === id)\r\n        return (\r\n            <div className=\"ProductView py-5\">\r\n                <Container fluid=\"lg\">\r\n                    <Row>\r\n                        <Col xl=\"6\" lg=\"6\" className=\"mb-5 text-center img d-plex\">\r\n                            <Link to=\"/\" style={{ textDecoration: 'none', color: 'rgb(0, 158, 127)' }} >\r\n                                <button className=\"btn back-btn\">\r\n                                    <FontAwesomeIcon icon={faArrowLeft} className=\"mr-2\" />\r\n                                    Back\r\n                                </button>\r\n                            </Link>\r\n                            <div className=\"img-wrapper\">\r\n                                <img src={product.img} alt=\"\" />\r\n                            </div>\r\n                        </Col>\r\n                        <Col xl=\"6\" lg=\"6\">\r\n                            <div className=\"title\">\r\n                                <h1>{product.name}</h1>\r\n                                <p>{product.author}</p>\r\n                            </div>\r\n                            <div className=\"description\">\r\n                                <p className={this.state.isShow === true ? \"des-show\" : ''}>\r\n                                    {product.des}\r\n                                </p>\r\n                                {\r\n                                    this.state.isShow === false ? <div className=\"read-more\" onClick={this.setShow}>Read more</div> : <div className=\"read-more\" onClick={this.setShow}>Less</div>\r\n\r\n                                }\r\n                            </div>\r\n                            <div className=\"price\">\r\n                                ${product.price}\r\n                            </div>\r\n                            <CartBtn onAddToCart={onAddToCart} product={product} cart={cart} onCartBtnClick={onCartBtnClick} onDecreaseCart={onDecreaseCart} />\r\n                            <div className=\"category-product\">\r\n                                <Link to=\"/\" className=\"btn\">\r\n                                    {product.category}\r\n                                </Link>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProductView","import React, { Component } from 'react'\r\nimport { Container, Row } from 'reactstrap'\r\nimport '../../css/client/RelateItems.css'\r\nclass RelateItems extends Component {\r\n    render() {\r\n        let { products, id } = this.props\r\n        return (\r\n            <div className=\"relate-items\">\r\n                <Container className=\"max-width\">\r\n                    <Row className=\"ml-2\" >\r\n                        <h1>Sản phẩm liên quan</h1>\r\n                    </Row>\r\n                    <Row>\r\n                        {this.props.showProduct(products, id)}\r\n                    </Row>\r\n                </Container>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default RelateItems","\r\nimport React, { Component } from 'react'\r\nimport { Button } from 'reactstrap'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass ButtonDelete extends Component {\r\n    render() {\r\n        let {deleteProduct,product,onDeleteCategory,id,type} = this.props\r\n        switch(type) {\r\n            case 'category':\r\n                return (\r\n                    <div className=\"cart-btn\">\r\n                        <Button className=\"btn related\" onClick={() => onDeleteCategory(id)}>\r\n                            <FontAwesomeIcon icon={faTrashAlt} />\r\n                            <p>Delete</p>\r\n                        </Button>\r\n                    </div>\r\n                )\r\n            default:\r\n                return (\r\n                    <div className=\"cart-btn\">\r\n                        <Button className=\"btn related\" onClick={() => deleteProduct(product)}>\r\n                            <FontAwesomeIcon icon={faTrashAlt} />\r\n                            <p>Delete</p>\r\n                        </Button>\r\n                    </div>\r\n                )\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default ButtonDelete","import React, { Component } from 'react'\r\nimport { Col } from 'reactstrap'\r\nimport '../../css/client/Product.css'\r\nimport CartBtn from './CartBtn'\r\nimport ButtonDelete from '../admin/ButtonDelete'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Product extends Component {\r\n\r\n    handleClick = () => {\r\n        let { product } = this.props\r\n        this.props.onGetProductUpdate(product)\r\n        this.props.onOpenFormProduct()\r\n    }\r\n\r\n    render() {\r\n        let { \r\n            type, \r\n            product, \r\n            cart, \r\n            onAddToCart, \r\n            onCartBtnClick, \r\n            onDecreaseCart,\r\n            deleteProduct} = this.props\r\n        return (\r\n            <Col className=\"mb-5\" sm=\"6\" lg=\"4\" xl=\"3\">\r\n                <Link\r\n                    className=\"product\"\r\n                    to={type === 'admin' ? '/admin/products' : `/product/${product._id}`}\r\n                    \r\n                >\r\n                    <img src={product.img} alt=\"this is image\" onClick={type === 'admin' ? this.handleClick : null}/>\r\n                    <div className=\"info\">\r\n                        <h3 className=\"title\">{product.name}</h3>\r\n                        <p className=\"author\">{product.author}</p>\r\n                    </div>\r\n                    {\r\n                        (type === 'related' || type === 'admin') &&\r\n                        <div className=\"cartbtn-price\">\r\n                            <div className=\"price\">${product.price}</div>\r\n                            {\r\n                                type !== 'admin' &&\r\n                                <CartBtn\r\n                                    type={type}\r\n                                    cart={cart}\r\n                                    product={product}\r\n                                    onAddToCart={onAddToCart}\r\n                                    onCartBtnClick={onCartBtnClick}\r\n                                    onDecreaseCart={onDecreaseCart} />\r\n                            }\r\n                            {\r\n                                type == 'admin' && <ButtonDelete deleteProduct={deleteProduct} product={product}/>\r\n                            }\r\n                        </div>\r\n                    }\r\n                </Link>\r\n            </Col>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Product","import React, { Component } from 'react'\r\nimport Nav from '../../components/client/Nav'\r\nimport Cart from '../../components/client/Cart'\r\nimport CartItem from '../../components/client/CartItem'\r\nimport ProductView from '../../components/client/ProductView'\r\nimport RelateItems from '../../components/client/RelateItems'\r\nimport Product from '../../components/client/Product'\r\n// import Alert from '../../components/Alert'\r\nimport { connect } from 'react-redux'\r\nimport { actGetAllProduct, actAddToCart, actCartBtnClick, actDecreaseCart, actDeleteCart } from '../../actions/index'\r\nclass Detail extends Component {\r\n    showProduct = (products, id) => {\r\n        let product = products.find(product => product._id === id)\r\n        let category = product.category\r\n        let relateitems = products.filter(product => product.category === category)\r\n        let result = null\r\n        if (relateitems.length > 0) {\r\n            result = relateitems.map((product, index) => {\r\n                return <Product\r\n                    key={index}\r\n                    product={product}\r\n                    type=\"related\"\r\n                    cart={this.props.cart}\r\n                    onAddToCart={this.props.onAddToCart}\r\n                    onCartBtnClick={this.props.onCartBtnClick}\r\n                    onDecreaseCart={this.props.onDecreaseCart} />\r\n            })\r\n        }\r\n        return result\r\n    }\r\n    render() {\r\n        let { products, onAddToCart, cart, onCartBtnClick, onDecreaseCart, onDeleteCart } = this.props\r\n        console.log(cart)\r\n        let { match } = this.props.match\r\n        let id = match.params.id\r\n        return (\r\n            <div>\r\n                {/* <Alert /> */}\r\n                <Nav />\r\n                <Cart cart={cart} />\r\n                <CartItem cart={cart} onAddToCart={onAddToCart} onDecreaseCart={onDecreaseCart} onDeleteCart={onDeleteCart} />\r\n                <ProductView products={products} id={id} onAddToCart={onAddToCart} cart={cart} onCartBtnClick={onCartBtnClick} onDecreaseCart={onDecreaseCart} />\r\n                <RelateItems showProduct={this.showProduct} products={products} id={id} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        cart: state.cart,\r\n        products: state.products,\r\n        statusCartItem: state.statusCartItem,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onGetAllProducts: () => {\r\n            dispatch(actGetAllProduct())\r\n        },\r\n        onAddToCart: (product) => {\r\n            dispatch(actAddToCart(product, 1))\r\n        },\r\n        onDecreaseCart: (product) => {\r\n            dispatch(actDecreaseCart(product, 1))\r\n        },\r\n        onCartBtnClick: () => {\r\n            dispatch(actCartBtnClick())\r\n        },\r\n        onDeleteCart: (product) => {\r\n            dispatch(actDeleteCart(product))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Detail)","import React, { Component } from 'react'\r\nimport { Button, Container } from 'reactstrap'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport '../../css/client/Banner.css'\r\n\r\nclass Banner extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            keyword: ''\r\n        }\r\n    }\r\n\r\n    handeChange = (e) => {\r\n        let target = e.target\r\n        let name = target.name\r\n        let value = target.value\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n    handleOnclick = () => {\r\n        let { keyword } = this.state\r\n        this.props.onFindProduct(keyword)\r\n        this.setState({\r\n            keyword: ''\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"Banner\">\r\n                <Container>\r\n                    <div className=\"title\">\r\n                        <h1>Cửa hàng sách của riêng bạn</h1>\r\n                        <p>Nhận những cuốn sách yêu thích của bạn từ nhiều loại sách của chúng tôi.</p>\r\n                    </div>\r\n                    <div className=\"search-bar\">\r\n                        <span className=\"label\">Sách</span>\r\n                        <form>\r\n                            <input className=\"p-0\" type=\"text\" placeholder=\"Tìm kiến sách của bạn tại đây\" name=\"keyword\" value={this.state.keyword} onChange={this.handeChange} />\r\n                        </form>\r\n                        <Button onClick={this.handleOnclick}>\r\n                            <FontAwesomeIcon icon={faSearch} className=\"mr-2\" />\r\n                            Tìm kiếm\r\n                        </Button>\r\n                    </div>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Banner","import React, { Component } from 'react'\r\n\r\n\r\nimport Nav from './Nav'\r\nimport Banner from './Banner'\r\nclass Header extends Component {\r\n\r\n    render() {\r\n        let { onFindProduct } = this.props\r\n        return (\r\n            <header>\r\n                {/* Nav  */}\r\n                <Nav />\r\n                {/* slider  */}\r\n                <Banner onFindProduct={onFindProduct} />\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header","import React, { Component } from 'react'\r\nimport { Col } from 'reactstrap'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faThLarge } from \"@fortawesome/free-solid-svg-icons\"\r\nimport '../../css/client/Category.css'\r\n\r\nclass Category extends Component { \r\n    render() {\r\n        let { onFilterProducts, paginate,category } = this.props\r\n        console.log(category)\r\n        return (\r\n            <Col lg=\"3\" xl=\"2\">\r\n                <div className=\"category\">\r\n                    <div className=\"logo\">\r\n                        <FontAwesomeIcon icon={faThLarge} className=\"mr-2\" />\r\n                        Chọn thể loại\r\n                    </div>\r\n                    <ul>\r\n                        {/* <li onClick={(e) => { onFilterProducts('Children Literature'); paginate(1) }}>\r\n                            <p>Children Literature</p>\r\n                        </li>\r\n                        <li onClick={() => { onFilterProducts('Comic Book'); paginate(1) }}>\r\n                            <p>Comic Book</p>\r\n                        </li>\r\n                        <li onClick={() => { onFilterProducts('Fantasy'); paginate(1) }}>\r\n                            <p>Fantasy</p>\r\n                        </li>\r\n                        <li onClick={() => { onFilterProducts('Horror'); paginate(1) }}>\r\n                            <p>Horror</p>\r\n                        </li>\r\n                        <li onClick={() => { onFilterProducts('Novel'); paginate(1) }}>\r\n                            <p>Novel</p>\r\n                        </li>\r\n                        <li onClick={() => { onFilterProducts('Romantic'); paginate(1) }}>\r\n                            <p>Romantic</p>\r\n                        </li>\r\n                        <li onClick={() => { onFilterProducts('Science Fiction'); paginate(1) }}>\r\n                            <p>Science Fiction</p>\r\n                        </li>\r\n                        <li onClick={() => { onFilterProducts('Thriller'); paginate(1) }}>\r\n                            <p>Thriller</p>\r\n                        </li> */}\r\n                        {\r\n                            category.map(item => \r\n                                <li key={item._id} onClick={() => { onFilterProducts(item.name); paginate(1) }}>\r\n                                    <p>{item.name}</p>\r\n                                </li>\r\n                            )\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </Col>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Category","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Pagination extends Component {\r\n\r\n    showPageNumbers = (pageNumbers) => {\r\n        let result = null\r\n        result = pageNumbers.map((number, index) =>\r\n            <li key={index} className=\"page-item\">\r\n                <Link to=\"#\" className=\"page-link\" onClick={() => this.props.paginate(number)}>{number}</Link>\r\n            </li>\r\n        )\r\n        return result\r\n    }\r\n    render() {\r\n        let { perPage, totalProducts } = this.props\r\n        const pageNumbers = []\r\n        for (let i = 1; i <= Math.ceil(totalProducts / perPage); i++) {\r\n            pageNumbers.push(i);\r\n        }\r\n\r\n        return (\r\n            <ul className=\"pagination\">\r\n                {this.showPageNumbers(pageNumbers)}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Pagination","import React, { Component } from 'react'\r\nimport '../css/NotFound.css'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nclass NotFound extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"NotFound\">\r\n                <div className=\"wrapper\">\r\n                    <h1>Sorry, No result found :(</h1>\r\n                    <img className=\"w-100\" src=\"https://res.cloudinary.com/dofqucuyy/image/upload/v1586332632/Books/notfound_sufieg.svg\" alt=\"\" />\r\n\r\n                    {/* // type !== 'admin' &&  */}\r\n                    <button className=\"btn\" onClick={this.props.onGetAllProduct}>\r\n                        <FontAwesomeIcon icon={faChevronLeft} />\r\n                            Go Back\r\n                    </button>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NotFound","import React, { Component } from 'react'\r\nimport { Col, Row } from 'reactstrap'\r\nimport Pagination from './Pagination'\r\nimport NotFound from '../NotFound'\r\nclass Products extends Component {\r\n    render() {\r\n        let { products, perPage, totalProducts, paginate, onGetAllProduct } = this.props\r\n        return (\r\n            <Col lg=\"9\" xl=\"10\">\r\n                <div className=\"products\">\r\n                    <div className=\"h-100 container\">\r\n                        {\r\n                            !products.length ? <NotFound onGetAllProduct={onGetAllProduct} /> :\r\n                                <Row>\r\n                                    {this.props.children(products)}\r\n                                </Row>\r\n                        }\r\n                        <Row style={{ justifyContent: \"center\" }}>\r\n                            <Pagination perPage={perPage} totalProducts={totalProducts} paginate={paginate} />\r\n                        </Row>\r\n                    </div>\r\n                </div>\r\n            </Col>\r\n        )\r\n    }\r\n}\r\nexport default Products","import React, { Component } from 'react'\r\nimport { Container, Row } from 'reactstrap'\r\nimport Category from '../client/Category'\r\nimport Products from './Products'\r\nclass Main extends Component {\r\n    render() {\r\n        let { products, perPage, totalProducts, paginate, onFilterProducts, onGetAllProduct,category } = this.props\r\n        return (\r\n            <main className=\"main\">\r\n                <Container fluid={true}>\r\n                    <Row>\r\n                        {/* category  */}\r\n                        <Category onFilterProducts={onFilterProducts} paginate={paginate} category={category}/>\r\n                        {/* Products  */}\r\n                        <Products products={products} perPage={perPage} totalProducts={totalProducts} paginate={paginate} onGetAllProduct={onGetAllProduct}>\r\n                            {this.props.showProducts}\r\n                        </Products>\r\n                    </Row>\r\n                </Container>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main","import React, { Component } from 'react'\r\nimport Header from '../../components/client/Header'\r\nimport Cart from '../../components/client/Cart'\r\nimport CartItem from '../../components/client/CartItem'\r\nimport Main from '../../components/client/Main'\r\nimport { connect } from 'react-redux'\r\nimport Product from '../../components/client/Product'\r\n\r\n// import Alert from '../../components/Alert'\r\n\r\nimport {\r\n    actFilterCategoryRequest,\r\n    actGetOneProduct,\r\n    actAddToCart,\r\n    actDecreaseCart,\r\n    actDeleteCart,\r\n    actGetAllProductRequest,\r\n    actFindProductRequest,\r\n    actGetAllCategoryRequest,\r\n} from '../../actions/index'\r\n\r\n\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            currentPage: 1,\r\n            perPage: 8\r\n        }\r\n    }\r\n\r\n    showProducts = (products) => {\r\n        let result = null\r\n        if (products.length > 0) {\r\n            result = products.map((product, index) => {\r\n                return <Product key={index} product={product} onGetOneProduct={this.props.onGetOneProduct} />\r\n            })\r\n        }\r\n        return result\r\n    }\r\n\r\n    paginate = (number) => {\r\n        this.setState({\r\n            currentPage: number\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onGetAllCategory()\r\n        this.props.onGetAllProduct()\r\n    }\r\n\r\n    render() {\r\n        let { currentPage, perPage } = this.state\r\n        let { \r\n            products, \r\n            cart, \r\n            onAddToCart, \r\n            onDecreaseCart, \r\n            onDeleteCart, \r\n            onFilterProducts, \r\n            onFindProduct, \r\n            onGetAllProduct,\r\n            category \r\n        } = this.props\r\n        const indexOfLastProduct = currentPage * perPage\r\n        const indexOfFirstProduct = indexOfLastProduct - perPage\r\n        const currentProducts = products.slice(indexOfFirstProduct, indexOfLastProduct)\r\n\r\n        return (\r\n            <div>\r\n                {/* <Alert /> */}\r\n                <Header onFindProduct={onFindProduct} />\r\n                <Cart cart={cart} />\r\n                <CartItem\r\n                    cart={cart}\r\n                    onDecreaseCart={onDecreaseCart}\r\n                    onAddToCart={onAddToCart}\r\n                    onDeleteCart={onDeleteCart}\r\n                />\r\n                <Main\r\n                    showProducts={this.showProducts}\r\n                    products={currentProducts}\r\n                    perPage={perPage}\r\n                    totalProducts={products.length}\r\n                    paginate={this.paginate}\r\n                    onFilterProducts={onFilterProducts}\r\n                    onGetAllProduct={onGetAllProduct}\r\n                    category={category}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        products: state.products,\r\n        cart: state.cart,\r\n        statusAlert: state.statusAlert,\r\n        category : state.category\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onFilterProducts: (category) => {\r\n            dispatch(actFilterCategoryRequest(category))\r\n        },\r\n        onGetAllProduct: () => {\r\n            dispatch(actGetAllProductRequest())\r\n        },\r\n        onGetOneProduct: (id) => {\r\n            dispatch(actGetOneProduct(id))\r\n        },\r\n        onFindProduct: (name) => {\r\n            dispatch(actFindProductRequest(name))\r\n        },\r\n        onAddToCart: (product) => {\r\n            dispatch(actAddToCart(product, 1))\r\n        },\r\n        onDecreaseCart: (product) => {\r\n            dispatch(actDecreaseCart(product))\r\n        },\r\n        onDeleteCart: (product) => {\r\n            dispatch(actDeleteCart(product))\r\n        },\r\n        onGetAllCategory : () => {\r\n            dispatch(actGetAllCategoryRequest())\r\n        }\r\n    } \r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport '../../css/client/UserSideBar.css'\r\nclass UserSideBar extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"user-side-bar d-none d-xl-block\">\r\n                <ul className=\"nav\">\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"order\">\r\n                            Đơn hàng của bạn\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item mb-5\">\r\n                        <Link to=\"/checkout\">\r\n                            Thanh toán\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"profile\">\r\n                            Thiết lập tài khoản\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"#\">\r\n                            Đăng xuất\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserSideBar","import React, { Component } from 'react'\r\nimport { Form, FormGroup, Label, Input, Button } from 'reactstrap'\r\nimport '../../css/client/CheckoutForm.css'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCreditCard, faMoneyBillAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { CardElement } from '@stripe/react-stripe-js';\r\nimport { Redirect } from 'react-router-dom'\r\nimport callApi from '../../utils/apiCaller';\r\nimport axios from 'axios'\r\n\r\n\r\nclass CheckoutForm extends Component {\r\n    constructor(pros) {\r\n        super(pros)\r\n        this.state = {\r\n            id: '',\r\n            name: '',\r\n            email: '',\r\n            address: '',\r\n            phone: '',\r\n            payment: '',\r\n            date: '',\r\n            totalPrice: '',\r\n            cartItem: '',\r\n            redirect: false,\r\n            error: ''\r\n        }\r\n    }\r\n\r\n    totalPrice = (cart) => {\r\n        let totalPrice = null\r\n        cart.forEach(element => {\r\n            totalPrice += element.product.price * element.quantity\r\n        });\r\n        return totalPrice\r\n    }\r\n\r\n    componentDidMount() {\r\n        let today = new Date()\r\n        let date = `${today.getFullYear()}-${today.getMonth() + 1}-${today.getDate()}`\r\n        let totalPrice = this.totalPrice(this.props.cart)\r\n        let cart = this.props.cart\r\n        let { name, email, address, phone } = this.props.user\r\n        this.setState({\r\n            name: name,\r\n            email: email,\r\n            address: address,\r\n            phone: phone,\r\n            date: date,\r\n            totalPrice: totalPrice,\r\n            cartItem: cart,\r\n        })\r\n    }\r\n\r\n    handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const { stripe, elements } = this.props;\r\n        let order = { ...this.state }\r\n        delete order.redirect\r\n        delete order.id\r\n        delete order.error\r\n        // this.props.onCreateOrder(order)\r\n\r\n        if (order.payment === 'cash') {\r\n            let res = await callApi('api/order', 'POST', order)\r\n            console.log(res.data)\r\n            let id = res.data._id\r\n            this.props.onCreateOrder(res.data)\r\n            this.props.onRemoveAllCart()\r\n            localStorage.removeItem('cart')\r\n            this.props.onCloseCartItem()\r\n            this.setState({\r\n                id: id,\r\n                redirect: true\r\n            })\r\n        }\r\n\r\n        if (order.payment === 'card') {\r\n            const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n                type: 'card',\r\n                card: elements.getElement(CardElement),\r\n            });\r\n            if (!error) {\r\n                // console.log(paymentMethod)\r\n                // const { id } = paymentMethod\r\n                // const { data } = await axios.post('http://localhost:9000/api/charge', { id, amount: order.totalPrice * 100, order })\r\n                // console.log(data)\r\n                // if (data) {\r\n                //     let res = await callApi('api/order', 'POST', order)\r\n                //     let id = res.data._id\r\n                //     this.props.onCreateOrder(res.data)\r\n                //     this.setState({\r\n                //         id: id,\r\n                //         redirect: true\r\n                //     })\r\n                // }\r\n                // else {\r\n                //     this.setState({\r\n                //         error: true\r\n                //     })\r\n                // }\r\n                try {\r\n                    const { id } = paymentMethod\r\n                    await axios.post('http://localhost:9000/api/charge', { id, amount: order.totalPrice * 100, order })\r\n                    let res = await callApi('api/order', 'POST', order)\r\n                    let id_neworder = res.data._id\r\n                    this.props.onCreateOrder(res.data)\r\n                    this.props.onRemoveAllCart()\r\n                    localStorage.removeItem('cart')\r\n                    this.props.onCloseCartItem()\r\n                    this.setState({\r\n                        id: id_neworder,\r\n                        redirect: true\r\n                    })\r\n                } catch (error) {\r\n                    console.log(error)\r\n                    this.setState({\r\n                        error: error.response.data.message\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    onHandleInput = (e) => {\r\n        let target = e.target\r\n        let name = target.name\r\n        let value = target.value\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n        // console.log(this.state)\r\n    }\r\n\r\n    totalQuantity = (cart) => {\r\n        let totalQuantity = null\r\n        cart.forEach(element => {\r\n            totalQuantity += element.quantity\r\n        });\r\n        return totalQuantity\r\n    }\r\n    totalPrice = (cart) => {\r\n        let totalPrice = null\r\n        cart.forEach(element => {\r\n            totalPrice += element.product.price * element.quantity\r\n        });\r\n        return totalPrice\r\n    }\r\n\r\n    render() {\r\n        const { stripe } = this.props;\r\n        let { payment, redirect, id, error } = this.state\r\n        let { user, cart } = this.props\r\n        // console.log(user)\r\n        // console.log(this.state) \r\n        if (redirect === true) {\r\n            return <Redirect to={`/order-received/${id}`} />\r\n        }\r\n        return (\r\n            <div className=\"checkout-form\">\r\n                <div className='order-info'>\r\n                    <h3>Đơn hàng của bạn</h3>\r\n                    <div className=\"item\">\r\n                        <div className=\"title\">Tổng({this.totalQuantity(cart)})</div>\r\n                        <div className=\"price\">${this.totalPrice(cart)}</div>\r\n                    </div>\r\n                    <div className=\"item\">\r\n                        <div className=\"title\">Miễn phí vận chuyển</div>\r\n                        <div className=\"price\">$0.00</div>\r\n                    </div>\r\n                    <div className=\"item\">\r\n                        <div className=\"title\">Tiền cần thanh toán</div>\r\n                        <div className=\"price\">${this.totalPrice(cart)}</div>\r\n                    </div>\r\n                </div>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <div className=\"billing-address\">\r\n                        <h3 className=\"bt-header\">Thông tin của bạn</h3>\r\n                        <FormGroup>\r\n                            <Label for=\"name\">Tên</Label>\r\n                            <Input type=\"text\" name=\"text\" id=\"name\" autoComplete=\"off\" value={user.name} onChange={this.onHandleInput} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"email\">Email</Label>\r\n                            <Input type=\"email\" name=\"email\" id=\"email\" value={user.email} onChange={this.onHandleInput} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"address\">Địa chỉ</Label>\r\n                            <Input type=\"text\" name=\"address\" id=\"address\" value={user.address} onChange={this.onHandleInput} />\r\n                        </FormGroup>\r\n                        {/* <FormGroup>\r\n                            <Label for=\"city\">City</Label>\r\n                            <Input type=\"select\" name=\"select\" id=\"city\" value={city}>\r\n                                <option>Tỉnh/Thành Phố</option>\r\n                                <option>Hà Nội</option>\r\n                                <option>3</option>\r\n                                <option>4</option>\r\n                                <option>5</option>\r\n                            </Input>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"district\">District</Label>\r\n                            <Input type=\"select\" name=\"select\" id=\"distric\" value={district}>\r\n                                <option>Quận/Huyện</option>\r\n                                <option>Hai Bà Trưng</option>\r\n                                <option>3</option>\r\n                                <option>4</option>\r\n                                <option>5</option>\r\n                            </Input>\r\n                        </FormGroup> */}\r\n                        <FormGroup>\r\n                            <Label for=\"phone\">Số điện thoại</Label>\r\n                            <Input type=\"text\" name=\"phone\" id=\"phone\" value={user.phone} onChange={this.onHandleInput} />\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"payment\">\r\n                        <h3 className=\"bt-header\">Chọn phương thức thanh toán</h3>\r\n                        <FormGroup className=\"d-flex justify-content-between mb-3 p-0\">\r\n                            <Input\r\n                                type=\"radio\"\r\n                                id=\"cash\"\r\n                                name=\"payment\"\r\n                                value=\"cash\"\r\n                                onChange={this.onHandleInput}\r\n                                autoComplete=\"off\"\r\n                            />{' '}\r\n                            <Label for=\"cash\" check>\r\n                                <FontAwesomeIcon icon={faMoneyBillAlt} />\r\n                                <span>Tiền mặt</span>\r\n                            </Label>\r\n                            <Input\r\n                                type=\"radio\"\r\n                                id=\"card\"\r\n                                name=\"payment\"\r\n                                value=\"card\"\r\n                                onChange={this.onHandleInput}\r\n                                autoComplete=\"off\"\r\n                            />{' '}\r\n                            <Label for=\"card\" check>\r\n                                <FontAwesomeIcon icon={faCreditCard} />\r\n                                <span>Thẻ ATM</span>\r\n                            </Label>\r\n                        </FormGroup>\r\n                    </div>\r\n                    {payment === 'card' && <CardElement />}\r\n                    {error && <p style={{ color: 'red', textAlign: \"center\", marginTop: \"5px\" }}>{error}</p>}\r\n                    <Button type=\"submit\" className=\"btn w-100\" disabled={!stripe}>Tiến hành thanh toán</Button>\r\n                </Form>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default CheckoutForm","import React, { Component } from 'react'\r\nimport Nav from '../../components/client/Nav'\r\nimport UserSideBar from '../../components/client/UserSideBar'\r\nimport CheckoutForm from '../../components/client/CheckoutForm'\r\nimport '../../css/client/Checkout.css'\r\nimport { ElementsConsumer } from '@stripe/react-stripe-js';\r\nimport { connect } from 'react-redux'\r\nimport { actCreateOrder, actCloseCartItem, actRemoveAllCart } from '../../actions/index'\r\nclass Checkout extends Component {\r\n    render() {\r\n        let { user, cart, onCreateOrder, history, onCloseCartItem, onRemoveAllCart } = this.props\r\n        console.log(history)\r\n        return (\r\n            <div>\r\n                <Nav />\r\n                <div className=\"checkout user-container\">\r\n                    <div className=\"side-bar\">\r\n                        <UserSideBar />\r\n                    </div>\r\n                    <ElementsConsumer>\r\n                        {({ stripe, elements }) => (\r\n                            <CheckoutForm\r\n                                stripe={stripe}\r\n                                elements={elements}\r\n                                user={user}\r\n                                cart={cart}\r\n                                onCreateOrder={onCreateOrder}\r\n                                history={history}\r\n                                onCloseCartItem={onCloseCartItem}\r\n                                onRemoveAllCart={onRemoveAllCart}\r\n                            />\r\n                        )}\r\n                    </ElementsConsumer>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        cart: state.cart\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onCreateOrder: (order) => {\r\n            dispatch(actCreateOrder(order))\r\n        },\r\n        onCloseCartItem: () => {\r\n            dispatch(actCloseCartItem())\r\n        },\r\n        onRemoveAllCart: () => {\r\n            dispatch(actRemoveAllCart())\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Checkout)","import React, { Component } from 'react'\r\nimport Nav from '../../components/client/Nav'\r\nimport { Button } from 'reactstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport '../../css/client/OrderReceived.css'\r\nimport { connect } from 'react-redux'\r\n\r\nclass OrderReceived extends Component {\r\n\r\n    totalQuantity = (cart) => {\r\n        let totalQuantity = null\r\n        cart.forEach(element => {\r\n            totalQuantity += element.quantity\r\n        });\r\n        return totalQuantity\r\n    }\r\n    render() {\r\n        let { order } = this.props\r\n        console.log(order)\r\n        let { match } = this.props.match\r\n        let id = match.params.id\r\n        let orderCurrently = order.find(element => element._id === id)\r\n        console.log(orderCurrently)\r\n        return (\r\n            <div>\r\n                <Nav />\r\n                <div className=\"order-received user-container\">\r\n                    <div className=\"user-wrapper\">\r\n                        <div className=\"btn-back-to-home\">\r\n                            <Button>\r\n                                <Link to=\"/\">Trở lại</Link>\r\n                            </Button>\r\n                        </div>\r\n                        <div className=\"received mb-5\">\r\n                            <h3 className=\"bt-header\">Đơn hàng đã được nhận</h3>\r\n                            <p className=\"mb-4\">Cảm ơn bạn đơn đặt hàng của bạn đã được nhận</p>\r\n                            <div className=\"info\">\r\n                                <div className=\"info-data\">\r\n                                    <div className=\"info-header\">Mã đơn hàng</div>\r\n                                    <p>{orderCurrently._id}</p>\r\n                                </div>\r\n                                <div className=\"info-data\">\r\n                                    <div className=\"info-header\">Ngày</div>\r\n                                    <p>{orderCurrently.date}</p>\r\n                                </div>\r\n                                <div className=\"info-data\">\r\n                                    <div className=\"info-header\">Tổng tiền</div>\r\n                                    <p>${orderCurrently.totalPrice}</p>\r\n                                </div>\r\n                                <div className=\"info-data\">\r\n                                    <div className=\"info-header\">Phương thức thanh toán</div>\r\n                                    <p>{orderCurrently.payment === 'cash' ? 'Tiền mặt' : 'Thẻ ATM'}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"detail mb-5\">\r\n                            <h3 className=\"bt-header\">Chi tiết đơn hàng</h3>\r\n                            <div className=\"detail-info\">\r\n                                <div className=\"info-header m-0\">Sản phẩm</div>\r\n                                <p>{this.totalQuantity(orderCurrently.cartItem)}{this.totalQuantity(orderCurrently.cartItem) < 2 ? \"Item\" : \"Items\"}</p>\r\n                            </div>\r\n                            <div className=\"detail-info\">\r\n                                <div className=\"info-header m-0\">Thời gian đặt hàng</div>\r\n                                <p>{orderCurrently.date}</p>\r\n                            </div>\r\n                            <div className=\"detail-info\">\r\n                                <div className=\"info-header m-0\">Địa chỉ</div>\r\n                                <p>{orderCurrently.address}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"amount detail\">\r\n                            <h3 className=\"bt-header\">Tổng cộng</h3>\r\n                            <div className=\"detail-info\">\r\n                                <div className=\"info-header m-0\">Thành tiền</div>\r\n                                <p>${orderCurrently.totalPrice}</p>\r\n                            </div>\r\n                            <div className=\"detail-info\">\r\n                                <div className=\"info-header m-0\">Phương thức thanh toán</div>\r\n                                <p>{orderCurrently.payment === 'cash' ? 'Tiền mặt' : 'Thẻ ATM'}</p>\r\n                            </div>\r\n                            <div className=\"detail-info\">\r\n                                <div className=\"info-header m-0\">Tổng tiền</div>\r\n                                <p>${orderCurrently.totalPrice}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        order: state.order\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, null)(OrderReceived)","import React, { Component } from 'react'\r\nimport { Progress, Table } from 'reactstrap';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\"\r\nclass OrderDetails extends Component {\r\n    showItems = (cartItems) => {\r\n        let result = null\r\n        result = cartItems.map((cartItem, index) =>\r\n            <tr key={index}>\r\n                <th scope=\"row\">\r\n                    <div className=\"img-wrapper\">\r\n                        <img src={cartItem.product.img} alt=\"\" />\r\n                    </div>\r\n                </th>\r\n                <td>\r\n                    <div className=\"title\">{cartItem.product.name}</div>\r\n                    <div className=\"price\">${cartItem.product.price}</div>\r\n                </td>\r\n                <td>\r\n                    {cartItem.quantity}\r\n                </td>\r\n                <td>${cartItem.quantity * cartItem.product.price}.00</td>\r\n            </tr>\r\n        )\r\n        return result\r\n    }\r\n    render() {\r\n        let { orders, indexOrderSelected } = this.props\r\n        let orderSelected = null\r\n        let cartItems = null\r\n        if (orders.length > 0) {\r\n            orderSelected = orders[indexOrderSelected]\r\n            cartItems = orderSelected.cartItem\r\n        }\r\n        console.log(orderSelected)\r\n        console.log(cartItems)\r\n        return (\r\n            <div className=\"order-detail\">\r\n                <h3 className=\"bt-header\">Chi tiết đơn hàng</h3>\r\n                {\r\n                    orders.length === 0 ? <span style={{\r\n                        fontSize: \"15px\",\r\n                        fontWeight: \"700\",\r\n                        color: \"rgb(119, 121, 140)\",\r\n                        display: \"block\",\r\n                        width: \"100%\",\r\n                        textAlign: \"center\",\r\n                        padding: \"40px 0px\"\r\n                    }}>No Order Found</span> :\r\n                        <React.Fragment>\r\n                            <div className=\"details\">\r\n                                <div className=\"address\">\r\n                                    <div className=\"title\">Địa chỉ giao hàng</div>\r\n                                    <span>{orderSelected.address}</span>\r\n                                    <div className=\"title mt-4\">Phương thức thanh toán</div>\r\n                                    <span>{orderSelected.payment === 'card' ? 'Thanh toán Online' : 'Tiền mặt'}</span>\r\n                                </div>\r\n                                <div className=\"info\">\r\n                                    <div>\r\n                                        Tổng đơn hàng\r\n                                    <span>${orderSelected.totalPrice}</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        Giảm giá\r\n                                    <span>$0.00</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        Phí ship\r\n                                    <span>$0.00</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        Thành tiền\r\n                                    <span>${orderSelected.totalPrice}</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"progress-wrapper\">\r\n                                <Progress value=\"75\">\r\n                                    <div className=\"des\">\r\n                                        <div className=\"check-btn\">\r\n                                            <FontAwesomeIcon icon={faCheck} />\r\n                                        </div>\r\n                                        <div className=\"text\">Đơn hàng đã được nhận</div>\r\n                                    </div>\r\n                                    <div className=\"des\">\r\n                                        <div className=\"check-btn\">\r\n                                            <FontAwesomeIcon icon={faCheck} />\r\n                                        </div>\r\n                                        <div className=\"text\">Đơn hàng đang giao</div>\r\n                                    </div>\r\n                                    <div className=\"des\">\r\n                                        <div className=\"check-btn not-completed\">\r\n                                            {/* <FontAwesomeIcon icon={faCheck} /> */}\r\n                                        3\r\n                                    </div>\r\n                                        <div className=\"text\">Đã nhận hàng</div>\r\n                                    </div>\r\n                                </Progress>\r\n                            </div>\r\n                            <div className=\"items\">\r\n                                <Table>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th></th>\r\n                                            <th>Items</th>\r\n                                            <th>Số lượng</th>\r\n                                            <th>Giá</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {this.showItems(cartItems)}\r\n                                    </tbody>\r\n                                </Table>\r\n                            </div>\r\n                        </React.Fragment>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OrderDetails","import React, { Component } from 'react'\r\n\r\nclass Order extends Component {\r\n\r\n    render() {\r\n        let { order, index, onGetIndexOrderSelected, indexOrderSelected } = this.props\r\n        console.log(index, indexOrderSelected)\r\n        return (\r\n            <div className={index === indexOrderSelected ? 'order-active order' : 'order'} onClick={() => onGetIndexOrderSelected(index)}>\r\n                <div className=\"w-100\">\r\n                    <div className=\"header\">Đơn hàng#{index + 1}</div>\r\n                    <div className=\"body\">\r\n                        <div className=\"order-info\">\r\n                            Ngày:\r\n                            <span>{order.date}</span>\r\n                        </div>\r\n                        <div className=\"order-info\">\r\n                            Id:\r\n                            <span>{order._id}</span>\r\n                        </div>\r\n                        <div className=\"order-info\">\r\n                            Tổng tiền:\r\n                            <span>${order.totalPrice}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Order","import React, { Component } from 'react'\r\nimport Nav from '../../components/client/Nav'\r\nimport UserSideBar from '../../components/client/UserSideBar'\r\nimport OrderDetails from '../../components/client/OrderDetails'\r\nimport Order from '../../components/client/Order'\r\nimport '../../css/client/Orders.css'\r\nimport { connect } from 'react-redux'\r\nimport { actGetAllOrderRequest } from '../../actions/index'\r\n\r\nclass Orders extends Component {\r\n    constructor(pros) {\r\n        super(pros)\r\n        this.state = {\r\n            indexOrderSelected: 0\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.onGetAllOrders(this.props.user)\r\n    }\r\n\r\n\r\n    showOrder = (orders) => {\r\n        let result = null\r\n        if (orders.length > 0) {\r\n            result = orders.map((order, index) => {\r\n                return <Order key={index} index={index} order={order} onGetIndexOrderSelected={this.getIndexOrderSelected} indexOrderSelected={this.state.indexOrderSelected} />\r\n            })\r\n        }\r\n        return result\r\n    }\r\n\r\n    getIndexOrderSelected = (index) => {\r\n        this.setState({\r\n            indexOrderSelected: index\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let { orders } = this.props\r\n        console.log(orders)\r\n        let { indexOrderSelected } = this.state\r\n        return (\r\n            <div>\r\n                <Nav />\r\n                <div className=\"orders user-container\">\r\n                    <div>\r\n                        <UserSideBar />\r\n                    </div>\r\n                    {\r\n                        <div className=\"order-container\">\r\n                            <div className=\"my-order mx-4\">\r\n                                <h3 className=\"bt-header\">Đơn hàng của bạn</h3>\r\n                                {/* {\r\n                                    orders.length === 0 && <span style={{\r\n                                        fontSize: \"15px\",\r\n                                        fontWeight: \"700\",\r\n                                        color: \"rgb(119, 121, 140)\",\r\n                                        display: \"block\",\r\n                                        width: \"100%\",\r\n                                        textAlign: \"center\",\r\n                                        padding: \"40px 0px\"\r\n                                    }}>No Order Found</span>\r\n                                } */}\r\n                                {/* <Order />\r\n                                <Order />\r\n                                <Order />\r\n                                <Order /> */}\r\n                                {this.showOrder(orders)}\r\n                            </div>\r\n                            <OrderDetails orders={orders} indexOrderSelected={indexOrderSelected} />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        orders: state.order,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onGetAllOrders: (user) => {\r\n            dispatch(actGetAllOrderRequest(user))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders)","import React, { Component } from 'react'\r\nimport { Form, FormGroup, Label, Input, Button } from 'reactstrap'\r\nimport UserSideBar from '../../components/client/UserSideBar'\r\nimport Nav from '../../components/client/Nav'\r\nimport '../../css/client/UserProfile.css'\r\nimport { connect } from 'react-redux'\r\nimport { actUpdateUserRequest } from '../../actions/index'\r\nclass Userprofle extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            address: '',\r\n            phone: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let { user } = this.props\r\n        let name = user.name\r\n        let email = user.email\r\n        let address = user.address\r\n        let phone = user.phone\r\n        this.setState({\r\n            name: name,\r\n            email: email,\r\n            address: address,\r\n            phone: phone\r\n        })\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        let target = e.target\r\n        let name = target.name\r\n        let value = target.value\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        let user = this.state\r\n        this.props.onUpdateUser(user)\r\n    }\r\n    render() {\r\n        let { name, email, address, phone } = this.state\r\n        return (\r\n            <React.Fragment>\r\n                <Nav />\r\n                <div className=\"UserProfile user-container\">\r\n                    {/* <Alert option=\"edit\" isOpen={isSave} /> */}\r\n                    <div>\r\n                        <UserSideBar page=\"profile\" />\r\n                    </div>\r\n                    <div className=\"profile\">\r\n                        <div className=\"header\">\r\n                            <h1>Your Profile</h1>\r\n                        </div>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <FormGroup>\r\n                                <Label for=\"name\">\r\n                                    Name\r\n                            <span className=\"ml-1 text-danger\">*</span>\r\n                                </Label>\r\n                                <Input id=\"name\" type=\"text\" name=\"name\" autoComplete=\"off\" value={name} onChange={this.handleChange} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"email\">\r\n                                    Email\r\n                            <span className=\"ml-1 text-danger\">*</span>\r\n                                </Label>\r\n                                <Input id=\"email\" type=\"email\" name=\"email\" autoComplete=\"off\" value={email} onChange={this.handleChange} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"address\">\r\n                                    Address\r\n                            <span className=\"ml-1 text-danger\">*</span>\r\n                                </Label>\r\n                                <Input id=\"address\" type=\"text\" name=\"address\" autoComplete=\"off\" value={address} onChange={this.handleChange} />\r\n                                {/* {errors.address && <div className=\"validation\">{errors.address}</div>} */}\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"phone\">\r\n                                    Phone\r\n                            <span className=\"ml-1 text-danger\">*</span>\r\n                                </Label>\r\n                                <Input autoComplete=\"off\" id=\"phone\" type=\"text\" name=\"phone\" value={phone} onChange={this.handleChange} />\r\n                                {/* {errors.phone && <div className=\"validation\">{errors.phone}</div>} */}\r\n                            </FormGroup>\r\n                            <Button size=\"lg\" block type=\"submit\">\r\n                                Save\r\n                            </Button>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onUpdateUser: (user) => {\r\n            dispatch(actUpdateUserRequest(user))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Userprofle)","import React, { Component } from 'react'\r\nimport {\r\n    Form,\r\n    FormGroup,\r\n    Input,\r\n    Label,\r\n    Button\r\n} from 'reactstrap';\r\nimport { Redirect } from 'react-router-dom'\r\nimport '../../css/admin/AdminLogin.css'\r\nimport callApi from '../../utils/apiCaller'\r\n\r\nclass AdminLogin extends Component {\r\n    constructor(pros) {\r\n        super(pros)\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            emailErr: '',\r\n            passwordErr: '',\r\n            err: '',\r\n            isLogin: false\r\n        }\r\n    }\r\n\r\n    validate = (usename, password) => {\r\n        let usernameError = '';\r\n        let passwordError = '';\r\n\r\n        if (!usename) {\r\n            usernameError = 'The Username field is required.'\r\n        }\r\n        if (!password) {\r\n            passwordError = 'The Password field is required.'\r\n        }\r\n\r\n        if (usernameError || passwordError) {\r\n            this.setState({\r\n                usernameError: usernameError,\r\n                passwordErr: passwordError\r\n            })\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    onHandleChange = (e) => {\r\n        let target = e.target\r\n        let name = target.name\r\n        let value = target.value\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    onSubmit = async (e) => {\r\n        e.preventDefault()\r\n        let { username, password } = this.state\r\n        let isValidate = this.validate(username, password)\r\n        if (isValidate) {\r\n            let account = {\r\n                username,\r\n                password\r\n            }\r\n            // // this.props.onLogin(account)\r\n            // callApi('api/auth/sign-in', 'POST', account).then(res => {\r\n            //     this.props.onLogin(res.data) // res.data = user\r\n            //     this.props.onCloseModal()\r\n\r\n            // }).catch(error => this.setState({\r\n            //     err: error.response.data.message\r\n            // }))\r\n            const res = await callApi('api/admin/sign-in', 'POST', account)\r\n            if (res) {\r\n                let admin = res.data\r\n                let adminToken = admin.accessToken\r\n                localStorage.setItem('adminToken', adminToken)\r\n                this.setState({\r\n                    isLogin: true\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLogin) {\r\n            return <Redirect to=\"/admin/products\" />\r\n        }\r\n        let { email, password, usernameError, passwordErr, err } = this.state\r\n        return (\r\n            <div className=\"AdminLogin\">\r\n                <div className=\"Authform\">\r\n                    <div className='header'>\r\n                        <img src=\"https://res.cloudinary.com/dofqucuyy/image/upload/v1585755124/Books/logo_gtuxyy.svg\" alt=\"\" />\r\n                        <p>Login to Admin</p>\r\n                    </div>\r\n                    {err && <div style={{\r\n                        color: \"rgb(97, 26, 21)\",\r\n                        backgroundColor: \"rgb(253, 236, 234)\",\r\n                        textAlign: \"center\",\r\n                        padding: \"15px\",\r\n                        borderRadius: \"4px\"\r\n                    }}>{err}</div>}\r\n                    <Form onSubmit={this.onSubmit}>\r\n                        <FormGroup>\r\n                            <Label for=\"Username\">Username</Label>\r\n                            <Input type=\"text\" name=\"username\" id=\"Username\" placeholder=\"EX: admin123\" value={email} onChange={this.onHandleChange} />\r\n                            {usernameError && <div className=\"validation\">{usernameError}</div>}\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"Password\">Password</Label>\r\n                            <Input type=\"password\" name=\"password\" id=\"Password\" placeholder=\"EX: admin123\" value={password} onChange={this.onHandleChange} />\r\n                            {passwordErr && <div className=\"validation\">{passwordErr}</div>}\r\n                        </FormGroup>\r\n                        <Button size=\"lg\" block type=\"submit\" className=\"btn\">Continue</Button>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AdminLogin","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport '../../css/admin/Header.css'\r\nclass Header extends Component {\r\n\r\n    render() {\r\n        let { onOpenFormProduct } = this.props\r\n        return (\r\n            <div className=\"NavAdmin\">\r\n                <div className=\"logo\">\r\n                    <Link to=\"/\">\r\n                        <img src=\"https://res.cloudinary.com/dofqucuyy/image/upload/v1585755124/Books/logo_gtuxyy.svg\" alt=\"\" />\r\n                    </Link>\r\n                </div>\r\n                <div className=\"add-products-btn\" onClick={onOpenFormProduct}>\r\n                    Thêm sản phẩm\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faSignOutAlt,\r\n    faThLarge,\r\n    faShoppingBasket,\r\n    faCalendarCheck,\r\n    faUsers,\r\n    faDiceD6\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport '../../css/admin/NavAdmin.css'\r\n\r\nclass Nav extends Component {\r\n\r\n    handleClick = () => {\r\n        localStorage.removeItem('adminToken')\r\n    }\r\n\r\n    showLinkItem = (nav) => {\r\n\r\n        let result = null\r\n        result = nav.map((item, index) =>\r\n            <li key={index} >\r\n                <Link to={item.path} >\r\n                    <FontAwesomeIcon icon={item.icon} />\r\n                    {item.text}\r\n                </Link>\r\n            </li>\r\n        )\r\n        return result\r\n    }\r\n\r\n    render() {\r\n        let path = this.props.match.match.path\r\n        // const nav = [\r\n        //     { icon: faThLarge, text: 'Dashboard', path: '/admin' },\r\n        //     { icon: faShoppingBasket, text: 'Products', path: '/admin/products' },\r\n        //     { icon: faCalendarCheck, text: 'Orders', path: '/admin/orders' },\r\n        //     { icon: faUsers, text: 'Customers', path: '/admin/customers' },\r\n        //     { icon: faSignOutAlt, text: 'Logout', path: '/admin/login' }\r\n        // ];\r\n        return (\r\n            <ul className=\"navs\">\r\n                {/* {this.showLinkItem(nav)} */}\r\n                <li >\r\n                    <Link to=\"/admin\" className={path === '/admin' ? 'link-active' : ''} >\r\n                        <FontAwesomeIcon icon={faThLarge} />\r\n                        Thống kê\r\n                    </Link>\r\n                </li>\r\n                <li >\r\n                    <Link to=\"/admin/products\" className={path === '/admin/products' ? 'link-active' : ''} >\r\n                        <FontAwesomeIcon icon={faShoppingBasket} />\r\n                        Sản phẩm\r\n                    </Link>\r\n                </li>\r\n                <li >\r\n                    <Link to=\"/admin/category\" className={path === '/admin/category' ? 'link-active' : ''}>\r\n                        <FontAwesomeIcon icon={faDiceD6} />\r\n                        Danh mục\r\n                    </Link>\r\n                </li>\r\n                <li >\r\n                    <Link to=\"/admin/orders\" className={path === '/admin/orders' ? 'link-active' : ''} >\r\n                        <FontAwesomeIcon icon={faCalendarCheck} />\r\n                        Đơn đặt hàng\r\n                    </Link>\r\n                </li>\r\n                <li >\r\n                    <Link to=\"/admin/customers\" className={path === '/admin/customers' ? 'link-active' : ''} >\r\n                        <FontAwesomeIcon icon={faUsers} />\r\n                        Khách hàng\r\n                    </Link>\r\n                </li>\r\n                <li >\r\n                    <Link to=\"/admin/login\" className={path === '/admin' ? 'link-active' : ''} onClick={this.handleClick}>\r\n                        <FontAwesomeIcon icon={faSignOutAlt} />\r\n                        Đăng xuất\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Nav\r\n","import React, { Component } from 'react'\r\nimport { Col } from 'reactstrap'\r\nclass Filter extends Component {\r\n    constructor(pros) {\r\n        super(pros)\r\n        this.state = {\r\n            category: 'Category Type',\r\n            price: 'Price',\r\n            payment: 'Payment Method',\r\n            amount: 'Amount',\r\n            orderAmount: 'Order Amount',\r\n        }\r\n    }\r\n\r\n    handeChange = (e) => {\r\n        let { price } = this.state\r\n        let { keyword } = this.props\r\n        let target = e.target\r\n        let name = target.name\r\n        let value = target.value\r\n        if (keyword) {\r\n            if (price) {\r\n                this.props.onFilterProducts(keyword, value, price)\r\n            }\r\n            else {\r\n                this.props.onFilterProducts(keyword, value, '')\r\n            }\r\n        }\r\n        if (!keyword) {\r\n            if (price) {\r\n                this.props.onFilterProducts('', value, price)\r\n            }\r\n            else {\r\n                this.props.onFilterProducts('', value, '')\r\n            }\r\n        }\r\n\r\n        // truyen state sang component Main\r\n        if (price && price !== 'Price') {\r\n            this.props.getFilter(value, price)\r\n        }\r\n        else {\r\n            this.props.getFilter(value, '')\r\n        }\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    handeChangeFilterPrice = (e) => {\r\n        let { category } = this.state\r\n        let { keyword } = this.props\r\n        let target = e.target\r\n        let name = target.name\r\n        let value = target.value\r\n        if (keyword) {\r\n            if (category && category !== 'Category Type') {\r\n                this.props.onFilterProducts(keyword, category, value)\r\n            }\r\n            if (category && category === 'Category Type') {\r\n                this.props.onFilterProducts(keyword, '', value)\r\n            }\r\n        }\r\n        if (!keyword) {\r\n            if (category && category !== 'Category Type') {\r\n                this.props.onFilterProducts('', category, value)\r\n            }\r\n            else {\r\n                this.props.onFilterProducts('', '', value)\r\n            }\r\n        }\r\n\r\n        // truyen state sang component Main\r\n        if (category && category !== 'Category Type') {\r\n            this.props.getFilter(category, value)\r\n        }\r\n        else {\r\n            this.props.getFilter('', value)\r\n        }\r\n\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    handeChangePayment = (e) => {\r\n        let { amount } = this.state\r\n        let { keyword_email } = this.props\r\n        let target = e.target\r\n        let name = target.name\r\n        let value = target.value\r\n        if (amount && amount !== 'Amount') {\r\n            this.props.onFilterOrders(value, amount, keyword_email)\r\n        }\r\n        else {\r\n            this.props.onFilterOrders(value, '', keyword_email)\r\n        }\r\n\r\n        // truyen state sang page Orders\r\n        if (amount && amount !== 'Amount') {\r\n            this.props.getFilterOrders(value, amount)\r\n        }\r\n        else {\r\n            this.props.getFilterOrders('', amount)\r\n        }\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n\r\n    }\r\n\r\n    handeChangeAmount = (e) => {\r\n        let { payment } = this.state\r\n        let { keyword_email } = this.props\r\n        let target = e.target\r\n        let name = target.name\r\n        let value = target.value\r\n        if (payment && payment !== 'Payment Method') {\r\n            this.props.onFilterOrders(payment, value, keyword_email)\r\n        }\r\n        else {\r\n            this.props.onFilterOrders('', value, keyword_email\r\n            )\r\n        }\r\n\r\n        // truyen state sang page Orders\r\n        if (payment && payment !== 'Payment Method') {\r\n            this.props.getFilterOrders(payment, value)\r\n        }\r\n        else {\r\n            this.props.getFilterOrders(payment, '')\r\n        }\r\n\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    showOption = (list) => {\r\n        let result = null\r\n        result = list.map((item, index) => <option key={index} value={item}>{item}</option>)\r\n        return result\r\n    }\r\n\r\n    render() {\r\n        // const listCategory = ['Category Type', 'Children Literature', 'Comic Book', 'Fantasy', 'Horror', 'Novel', 'Romantic', 'Science Fiction', 'Thriller']\r\n        const listPaymentMethod = ['Phương thức thanh toán', 'Cash On Delivery', 'Online Payment']\r\n        const listAmount = ['Số tiền', 'Highest to Lowest', 'Lowest to Highest']\r\n        const listPrice = ['Giá', 'Highest to Lowest', 'Lowest to Highest']\r\n        const listOrderAmount = ['Order Amount', 'Highest to Lowest', 'Lowest to Highest']\r\n        let { category, price, payment, amount, orderAmount } = this.state\r\n        let { type } = this.props\r\n        // console.log(this.state)\r\n        switch (type) {\r\n            case \"Orders\":\r\n                return (\r\n                    <React.Fragment>\r\n                        <Col xl=\"3\" className=\"Filter mb-3 mb-xl-0\">\r\n                            <select\r\n                                name=\"payment\"\r\n                                onChange={this.handeChangePayment}\r\n                                value={payment}\r\n                                className=\"name \"\r\n                                style={{ color: \"rgb(22, 31, 106)\", fontWeight: \"600\" }}\r\n                            >\r\n                                {this.showOption(listPaymentMethod)}\r\n                            </select>\r\n                        </Col>\r\n                        <Col xl=\"3\" className=\"Filter mb-3 mb-xl-0\">\r\n                            <select\r\n                                name=\"amount\"\r\n                                onChange={this.handeChangeAmount}\r\n                                value={amount}\r\n                                className=\"name\"\r\n                                style={{ color: \"rgb(22, 31, 106)\", fontWeight: \"600\" }}\r\n                            >\r\n                                {this.showOption(listAmount)}\r\n                            </select>\r\n                        </Col>\r\n                    </React.Fragment>\r\n                )\r\n            case \"Customers\":\r\n                return (\r\n                    <React.Fragment>\r\n                        <Col xl=\"3\" className=\"Filter mb-3 mb-xl-0\">\r\n                            <select\r\n                                name=\"orderAmount\"\r\n                                onChange={this.handeChange}\r\n                                value={orderAmount}\r\n                                className=\"name\"\r\n                                style={{ color: \"rgb(22, 31, 106)\", fontWeight: \"600\" }}\r\n                            >\r\n                                {this.showOption(listOrderAmount)}\r\n                            </select>\r\n                        </Col>\r\n                    </React.Fragment>\r\n                )\r\n            default:\r\n                return (\r\n                    <React.Fragment>\r\n                        <Col xl=\"3\" className=\"Filter mb-3 mb-xl-0\">\r\n                            <select\r\n                                name=\"category\"\r\n                                onChange={this.handeChange}\r\n                                value={category}\r\n                                className=\"name\"\r\n                                style={{ color: \"rgb(22, 31, 106)\", fontWeight: \"600\" }}\r\n                            >\r\n                                {/* {this.showOption(listCategory)} */}\r\n                                {/* <option value='Category Type'>Category Type</option>\r\n                                <option value='Children Literature'>Children Literature</option>\r\n                                <option value='Comic Book'>Comic Book</option>\r\n                                <option value='Fantasy'>Fantasy</option>\r\n                                <option value='Horror'>Horror</option>\r\n                                <option value='Novel'>Novel</option>\r\n                                <option value='Romantic'>Romantic</option>\r\n                                <option value='Science Fiction'>Science Fiction</option>\r\n                                <option value='Thriller'>Thriller</option> */}\r\n                                <option value='Category Type'>Danh mục</option>\r\n                                {\r\n                                    this.props.category.map(item =><option key={item._id} value={item.name}>{item.name}</option>)\r\n                                }\r\n                            </select>\r\n                        </Col>\r\n                        <Col xl=\"3\" className=\"Filter mb-3 mb-xl-0\">\r\n                            <select\r\n                                name=\"price\"\r\n                                onChange={this.handeChangeFilterPrice}\r\n                                value={price}\r\n                                className=\"name\"\r\n                                style={{ color: \"rgb(22, 31, 106)\", fontWeight: \"600\" }}\r\n                            >\r\n                                {this.showOption(listPrice)}\r\n                            </select>\r\n                        </Col>\r\n                    </React.Fragment>\r\n                )\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default Filter","import React, { Component } from 'react'\r\nimport { Col, Form, FormGroup, Input } from 'reactstrap'\r\n\r\n\r\nclass Search extends Component {\r\n    constructor(pros) {\r\n        super(pros)\r\n        this.state = {\r\n            keyword_product: '',\r\n            keyword_order: '',\r\n            keyword_customer: '',\r\n            keyword_category : ''\r\n        }\r\n    }\r\n\r\n    handleChangeProducts = (e) => {\r\n        let { category, price } = this.props\r\n        let target = e.target\r\n        let name = target.name\r\n        let value = target.value\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n        // if (name === 'keyword_product') {\r\n        //     if (value) {\r\n        //         this.props.onFilterProductsByName(value)\r\n        //     }\r\n        //     else {\r\n        //         this.props.onFilterProducts('')\r\n        //     }\r\n        // }\r\n        this.props.onFilterProductsByName(value)\r\n        this.props.getKeyword(value)\r\n    }\r\n\r\n    handleChangeOrders = (e) => {\r\n        let { payment, amount } = this.props\r\n        let target = e.target\r\n        let name = target.name\r\n        let value = target.value\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n        console.log(payment, amount)\r\n        this.props.onFilterOrders(payment, amount, value)\r\n        this.props.getKeywordOrders(value)\r\n    }\r\n\r\n    handleChangeCustomers = (e) => {\r\n        let target = e.target\r\n        let name = target.name\r\n        let value = target.value\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n        this.props.onFilterCustomers(value)\r\n    }\r\n\r\n    handleChangeCategory = (e) => {\r\n        let target = e.target\r\n        let name = target.name\r\n        let value = target.value\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n        this.props.onFilterCategory(value)\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        // let { keyword_product, keyword_customer, keyword_order } = this.state\r\n        e.preventDefault()\r\n        // this.props.onFindProduct(keyword_product)\r\n\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.setState({\r\n            keyword_product: '',\r\n            keyword_order: '',\r\n            keyword_customer: ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let { keyword_product, keyword_customer, keyword_order,keyword_category } = this.state\r\n        let { type} = this.props\r\n        switch (type) {\r\n            case \"Orders\":\r\n                return (\r\n                    <Col xl=\"4\" className=\"Search\">\r\n                        <Form className=\"h-100\" onSubmit={this.handleSubmit}>\r\n                            <FormGroup>\r\n                                <Input\r\n                                    value={keyword_order}\r\n                                    onChange={this.handleChangeOrders}\r\n                                    name=\"keyword_order\"\r\n                                    placeholder=\"Ex: Tìm kiếm theo email\"\r\n                                />\r\n                                {/* {\r\n                                    keyword_order &&\r\n                                    <FontAwesomeIcon\r\n                                        icon={faTimesCircle}\r\n                                        style={{ cursor: \"pointer\" }}\r\n                                        onClick={this.handleClick}\r\n                                    />\r\n                                } */}\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </Col>\r\n                )\r\n            case \"Customers\":\r\n                return (\r\n                    <Col xl=\"6  \" className=\"Search\" style={{ maxWidth: \"none\" }}>\r\n                        <Form className=\"h-100\" onSubmit={this.handleSubmit}>\r\n                            <FormGroup>\r\n                                <Input\r\n                                    value={keyword_customer}\r\n                                    onChange={this.handleChangeCustomers}\r\n                                    name=\"keyword_customer\"\r\n                                    placeholder=\"Ex: Tìm kiếm theo tên\"\r\n                                />\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </Col>\r\n                )\r\n            case \"Category\":\r\n                return (\r\n                    <Col xl=\"6  \" className=\"Search\" style={{ maxWidth: \"none\" }}>\r\n                        <Form className=\"h-100\" onSubmit={this.handleSubmit}>\r\n                            <FormGroup>\r\n                                <Input\r\n                                    value={keyword_category}\r\n                                    onChange={this.handleChangeCategory}\r\n                                    name=\"keyword_category\"\r\n                                    placeholder=\"Ex: Tìm kiếm theo tên\"\r\n                                />\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </Col>\r\n                )\r\n            default:\r\n                return (\r\n                    <Col xl=\"4\" className=\"Search\">\r\n                        <Form className=\"h-100\" onSubmit={this.handleSubmit}>\r\n                            <FormGroup>\r\n                                <Input\r\n                                    value={keyword_product}\r\n                                    onChange={this.handleChangeProducts}\r\n                                    name=\"keyword_product\"\r\n                                    placeholder=\"Ex: Tìm kiếm theo tên\"\r\n                                />\r\n                                {/* {\r\n                                    keyword_product &&\r\n                                    <FontAwesomeIcon\r\n                                        icon={faTimesCircle}\r\n                                        style={{ cursor: \"pointer\" }}\r\n                                        onClick={this.handleClick}\r\n                                    />\r\n                                } */}\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </Col>\r\n                )\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default Search","import React, { Component } from 'react';\r\nimport '../../css/admin/ButtonAddCategory.css'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nclass ButtonAddCategory extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"add-products-btn\" onClick={this.props.onToggleFormCategory}>\r\n                <FontAwesomeIcon icon={faPlus} className=\"mr-2\"/>\r\n                Thêm danh mục\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ButtonAddCategory;","import React, { Component } from 'react'\r\nimport { Col, Row } from 'reactstrap'\r\nimport Filter from '../../components/admin/Filter'\r\nimport Search from '../../components/admin/Search'\r\nimport '../../css/admin/TaskBar.css'\r\nimport ButtonAddCategory from './ButtonAddCategory'\r\n\r\nclass TaskBar extends Component {\r\n\r\n    handleChange = (e) => {\r\n\r\n    }\r\n\r\n    showTaskBar = (option) => {\r\n\r\n    }\r\n\r\n    render() {\r\n        let {\r\n            type,\r\n            onFilterProducts,\r\n            onFindProduct,\r\n            onFilterProductsByName,\r\n            getKeyword,\r\n            keyword,\r\n            category,\r\n            price,\r\n            getFilter,\r\n            onFilterOrders,\r\n            getKeywordOrders,\r\n            getFilterOrders,\r\n            payment,\r\n            amount,\r\n            keyword_email,\r\n            onFilterCustomers,\r\n            onToggleFormCategory,\r\n            onFilterCategory\r\n        } = this.props\r\n        switch (type) {\r\n            case \"Customers\":\r\n                return (\r\n                    <Row className=\"TaskBar\">\r\n                        <React.Fragment>\r\n                            <Col xl=\"2\" className=\"mb-4 mb-xl-0\">\r\n                                <h3 className=\"title\">Khách hàng</h3>\r\n                            </Col>\r\n                            <Search type={type} onFindProduct={onFindProduct} onFilterCustomers={onFilterCustomers} />\r\n                            {/* <Filter type={type} onFilterProducts={onFilterProducts} /> */}\r\n                        </React.Fragment>\r\n                    </Row>\r\n                )\r\n            case \"Orders\":\r\n                return (\r\n                    <Row className=\"TaskBar\">\r\n                        <React.Fragment>\r\n                            <Col xl=\"2\" className=\"mb-4 mb-xl-0\">\r\n                                <h3 className=\"title\">Đơn đặt hàng</h3>\r\n                            </Col>\r\n                            <Filter\r\n                                type={type}\r\n                                onFilterOrders={onFilterOrders}\r\n                                getFilterOrders={getFilterOrders}\r\n                                keyword_email={keyword_email}\r\n                            />\r\n                            <Search\r\n                                type={type}\r\n                                onFilterOrders={onFilterOrders}\r\n                                getKeywordOrders={getKeywordOrders}\r\n                                payment={payment}\r\n                                amount={amount}\r\n                            />\r\n                        </React.Fragment>\r\n                    </Row>\r\n                )\r\n            case \"Category\":\r\n                return (\r\n                    <Row className=\"TaskBar\">\r\n                        <React.Fragment>\r\n                            <Col xl=\"2\" className=\"mb-4 mb-xl-0\">\r\n                                <h3 className=\"title\">Danh mục</h3>\r\n                            </Col>\r\n                            <Search type={type} onFilterCategory={onFilterCategory} />\r\n                            {/* <Filter type={type} onFilterProducts={onFilterProducts} /> */}\r\n                            <ButtonAddCategory onToggleFormCategory={onToggleFormCategory}/>\r\n                        </React.Fragment>\r\n                    </Row>\r\n                )  \r\n            default:\r\n                return (\r\n                    <Row className=\"TaskBar\">\r\n                        <React.Fragment>\r\n                            <Col xl=\"2\" className=\"mb-4 mb-xl-0\">\r\n                                <h3 className=\"title\">{type ? type : 'Sản phẩm'}</h3>\r\n                            </Col>\r\n                            <Filter\r\n                                type={type}\r\n                                onFilterProducts={onFilterProducts}\r\n                                keyword={keyword}\r\n                                getFilter={getFilter}\r\n                                category={category}\r\n                            />\r\n                            <Search\r\n                                type={type}\r\n                                onFilterProductsByName={onFilterProductsByName}\r\n                                onFilterProducts={onFilterProducts}\r\n                                getKeyword={getKeyword}\r\n                                category={category}\r\n                                price={price}\r\n                            />\r\n                        </React.Fragment>\r\n                    </Row>\r\n                )\r\n        }\r\n    }\r\n}\r\n\r\nexport default TaskBar","import React, { Component } from 'react'\r\nimport { Container, Row, Col } from 'reactstrap'\r\nimport Pagination from '../../components/client/Pagination'\r\nimport TaskBar from '../../components/admin/TaskBar'\r\n\r\nimport '../../css/admin/Main.css'\r\nclass Main extends Component {\r\n    constructor(pros) {\r\n        super(pros)\r\n        this.state = {\r\n            keyword: '',\r\n            category: '',\r\n            price: ''\r\n        }\r\n    }\r\n\r\n    getKeyword = (keyword) => {\r\n        this.setState({\r\n            keyword: keyword,\r\n\r\n        })\r\n    }\r\n\r\n    getFilter = (category, priceType) => {\r\n        this.setState({\r\n            category: category,\r\n            price: priceType\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let {\r\n            products,\r\n            perPage,\r\n            totalProducts,\r\n            paginate,\r\n            onFilterProducts,\r\n            onFindProduct,\r\n            onFilterProductsByName,\r\n            category\r\n        } = this.props\r\n        return (\r\n            <div className=\"AdminProducts admin-page\">\r\n                <Container>\r\n                    <Row style={{ padding: \"0 15px\" }}>\r\n                        <Col className=\"admin-col mb-4 pb-0\">\r\n                            <TaskBar\r\n                                onFilterProducts={onFilterProducts}\r\n                                onFindProduct={onFindProduct}\r\n                                onFilterProductsByName={onFilterProductsByName}\r\n                                getKeyword={this.getKeyword}\r\n                                keyword={this.state.keyword}\r\n                                getFilter={this.getFilter}\r\n                                category={this.state.category}\r\n                                price={this.state.price}\r\n                                category={category}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        {this.props.showProducts(products)}\r\n                    </Row>\r\n                    <Row style={{ justifyContent: \"center\" }}>\r\n                        <Pagination perPage={perPage} totalProducts={totalProducts} paginate={paginate} />\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main","import React, { Component } from 'react'\r\nimport { Container, Row, Col, Form, FormGroup, Input, Label, Button } from 'reactstrap'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCloudUploadAlt, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport '../../css/admin/ProductFunc.css'\r\nimport callApi from '../../utils/apiCaller'\r\n\r\nclass ProductFunc extends Component {\r\n    constructor(pros) {\r\n        super(pros)\r\n        this.state = {\r\n            _id: '',\r\n            name: '',\r\n            price: '',\r\n            img: '',\r\n            des: '',\r\n            category: 'Children Literature',\r\n            author: '',\r\n            url_img: '',\r\n            // isClick: false,\r\n            nameErr: '',\r\n            priceErr: '',\r\n            desErr: '',\r\n            categoryErr: '',\r\n            authorErr: '',\r\n            err: ''\r\n        }\r\n    }\r\n\r\n    validateFn = (input = '', info = '') => {\r\n        if (!input) {\r\n            return `The ${info} field is required.`\r\n        }\r\n        // if (info !== 'price' && info !== 'category') {\r\n        //     if (input.length < 6) {\r\n        //         return `${info.charAt(0).toUpperCase() + info.slice(1)} must be at least 5 characters.`\r\n        //     }\r\n        // }\r\n\r\n        return '';\r\n    }\r\n\r\n    validate = (name, price, des, category, author) => {\r\n        const nameErr = this.validateFn(name, 'name') || '';\r\n        const priceErr = this.validateFn(price, 'price') || '';\r\n        const desErr = this.validateFn(des, 'des') || '';\r\n        const categoryErr = this.validateFn(category, 'category') || '';\r\n        const authorErr = this.validateFn(author, 'author') || '';\r\n        if (nameErr || priceErr || desErr || categoryErr || authorErr) {\r\n            this.setState({\r\n                nameErr: nameErr,\r\n                priceErr: priceErr,\r\n                desErr: desErr,\r\n                categoryErr: categoryErr,\r\n                authorErr: authorErr\r\n            })\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n\r\n\r\n    handleClick = () => {\r\n        this.props.onCloseFormProduct()\r\n        this.props.onResetProductUpdate()\r\n    }\r\n\r\n    isEmpty = (obj) => {\r\n        for (var key in obj) {\r\n            if (obj.hasOwnProperty(key))\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        let target = e.target\r\n        let name = target.name\r\n        let value = target.value\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    handleImage = async (e) => {\r\n        let target = e.target\r\n        // let name = target.name\r\n        let file = target.files[0]\r\n        // console.log(file)\r\n        // console.log(this.state.fileImg)\r\n        const formData = new FormData();\r\n        console.log(formData)\r\n        formData.append(\r\n            'image',\r\n            file,\r\n            file.name\r\n            // this.state.fileImg.name\r\n        );\r\n\r\n        const res = await callApi('api/upload/post', 'POST', formData)\r\n        // console.log(res.data.url_img)\r\n        if (res) {\r\n            if (this.state.img) {\r\n                this.setState({\r\n                    url_img: res.data.url_img,\r\n                    img: ''\r\n                })\r\n            }\r\n            this.setState({\r\n                url_img: res.data.url_img\r\n            })\r\n        }\r\n    }\r\n\r\n    handleClickCreateOrUpdateProduct = async (e) => {\r\n        e.preventDefault()\r\n        let { _id, name, price, des, category, author, url_img, img } = this.state\r\n        let isValidate = this.validate(name, price, des, category, author)\r\n        console.log(isValidate)\r\n        if (_id) {\r\n            let data = {\r\n                _id: _id,\r\n                name: name,\r\n                price: price,\r\n                des: des,\r\n                category: category,\r\n                author: author,\r\n                img: url_img ? url_img : img\r\n            }\r\n            if (isValidate) {\r\n                this.props.onUpdateProduct(data) // update product\r\n                this.props.onResetProductUpdate()\r\n            }\r\n        }\r\n        else {\r\n            let data = {\r\n                name: name,\r\n                price: price,\r\n                des: des,\r\n                category: category,\r\n                author: author,\r\n                img: url_img\r\n            }\r\n            if (isValidate) {\r\n                this.props.onAddProduct(data) // add product\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let { productEditing } = this.props\r\n        let isProductEditing = this.isEmpty(productEditing)\r\n        // console.log(productEditing)\r\n        // console.log(isProductEditing)\r\n        if (isProductEditing) {\r\n            this.setState({\r\n                category: 'Children Literature'\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                _id: productEditing._id,\r\n                name: productEditing.name,\r\n                price: productEditing.price,\r\n                des: productEditing.des,\r\n                img: productEditing.img,\r\n                author: productEditing.author,\r\n                category: productEditing.category\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    // static getDerivedStateFromProps(nextProps, prevState) {\r\n    //     console.log(nextProps)\r\n    //     console.log(prevState)\r\n    //     const isEmpty = (obj) => {\r\n    //         for (var key in obj) {\r\n    //             if (obj.hasOwnProperty(key))\r\n    //                 return false;\r\n    //         }\r\n    //         return true;\r\n    //     }\r\n    //     let { productEditing } = nextProps\r\n    //     // console.log(productEditing)\r\n    //     if (isEmpty(productEditing)) {\r\n    //         return prevState\r\n\r\n    //     }\r\n    //     // if(JSON.stringify(productEditing) !== JSON.stringify(prevState)) {\r\n    //     //     return prevState\r\n    //     // }\r\n    //     // if(!isEmpty(productEditing)) {\r\n    //     //     if(JSON.stringify(productEditing) !== JSON.stringify(prevState)) {\r\n    //     //         return \r\n    //     //     }\r\n    //     // }\r\n    //     else {\r\n    //         return {\r\n    //             _id: productEditing._id,\r\n    //             name: productEditing.name,\r\n    //             price: productEditing.price,\r\n    //             des: productEditing.des,\r\n    //             img: productEditing.img,\r\n    //             author: productEditing.author,\r\n    //             category: productEditing.category\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n\r\n    render() {\r\n        let { isOpenFormProduct, productEditing, onCloseFormProduct,isClick } = this.props\r\n        let {\r\n            name,\r\n            price,\r\n            des,\r\n            category,\r\n            author,\r\n            url_img,\r\n            img,\r\n            // isClick,\r\n            nameErr,\r\n            priceErr,\r\n            desErr,\r\n            categoryErr,\r\n            authorErr\r\n        } = this.state\r\n        const categoryList = [\r\n            { name: 'Children Literature' },\r\n            { name: 'Comic Book' },\r\n            { name: 'Fantasy' },\r\n            { name: 'Horror' },\r\n            { name: 'Novel' },\r\n            { name: 'Romantic' },\r\n            { name: 'Science Fiction' },\r\n            { name: 'Thriller' }\r\n        ];\r\n        return (\r\n            <div className={isOpenFormProduct ? \"ProductFuncBackground update-active\" : \"ProductFuncBackground\"}>\r\n                <Container className={isOpenFormProduct ? \"ProductFunc update-active\" : \"ProductFunc\"}>\r\n                    <Row style={{\r\n                        position: \"fixed\",\r\n                        top: \"0\",\r\n                        width: \"100%\",\r\n                        left: \"0\",\r\n                        right: \"0\",\r\n                        margin: \"0\",\r\n                        padding: \"50px 35px 0 70px\",\r\n                    }}>\r\n                        <Col className=\"d-flex justify-content-between p-0\">\r\n                            <h3\r\n                                className=\"bt-header mb-5\"\r\n                                style={{ fontSize: \"18px\", color: \"rgb(22,31,106)\" }}\r\n                            >\r\n                                {this.isEmpty(productEditing) ? 'Thêm sản phẩm' : 'Update sản phẩm'}\r\n                            </h3>\r\n                            <FontAwesomeIcon icon={faTimes} onClick={this.handleClick} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Form style={{ height: '100%', overflow: 'scroll' }}>\r\n                        <Row className=\"mb-5 w-100 m-0\">\r\n                            <Col xl=\"4\" style={{ padding: \"30px\" }}>\r\n                                <span className=\"product-title\">Upload ảnh tại đây</span>\r\n                            </Col>\r\n                            <Col xl=\"8\" className=\"product-background\">\r\n                                <FormGroup>\r\n                                    <Input\r\n                                        id=\"file\"\r\n                                        type=\"file\"\r\n                                        accept=\"image/*\"\r\n                                        name=\"fileImg\"\r\n                                        onChange={this.handleImage}\r\n                                    />\r\n                                    <Label for=\"file\" className=\"input-wrapper\">\r\n                                        <FontAwesomeIcon icon={faCloudUploadAlt} size=\"2x\" />\r\n                                        <span>\r\n                                            <span>Drag/Upload </span>\r\n                                            ảnh của bạn tại đây\r\n                                        </span>\r\n                                    </Label>\r\n                                    {\r\n                                        img &&\r\n                                        <div className=\"img-wrapper\">\r\n                                            <img src={productEditing.img} alt=\"\" />\r\n                                        </div>\r\n                                    }\r\n                                    {\r\n                                        url_img &&\r\n                                        <div className=\"img-wrapper\">\r\n                                            <img src={url_img} alt=\"\" />\r\n                                        </div>\r\n                                    }\r\n\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"w-100 m-0\">\r\n                            <Col xl=\"4\" style={{ padding: \"30px\" }}>\r\n                                <span className=\"product-title\">\r\n                                    Thêm những thông tin cần thiết của sản phẩm tại đây\r\n                                </span>\r\n                            </Col>\r\n                            <Col className=\"product-background\">\r\n                                <FormGroup className=\"update-form\">\r\n                                    <Label className=\"product-label\" for=\"name\">\r\n                                        Tên\r\n                                        <span className=\"ml-1 text-danger\">*</span>\r\n                                    </Label>\r\n                                    <Input\r\n                                        autoComplete=\"off\"\r\n                                        className=\"product-form-control\"\r\n                                        id=\"name\"\r\n                                        type=\"text\"\r\n                                        name=\"name\"\r\n                                        onChange={this.handleChange}\r\n                                        // value={productEditing.name ? productEditing.name : name}\r\n                                        value={name}\r\n                                    />\r\n                                    {nameErr && <div className=\"validation\">{nameErr}</div>}\r\n                                </FormGroup>\r\n\r\n                                <FormGroup className=\"update-form\">\r\n                                    <Label className=\"product-label\" for=\"description\">\r\n                                        Mô tả\r\n                                        <span className=\"ml-1 text-danger\">*</span>\r\n                                    </Label>\r\n                                    <div>\r\n                                        <textarea\r\n                                            // value={productEditing.des ? productEditing.des : des}\r\n                                            value={des}\r\n                                            className=\"product-form-control\"\r\n                                            id=\"description\"\r\n                                            type=\"text\"\r\n                                            name=\"des\"\r\n                                            onChange={this.handleChange}\r\n                                            autoComplete=\"off\"\r\n                                        />\r\n                                    </div>\r\n                                    {desErr && <div className=\"validation\">{desErr}</div>}\r\n                                </FormGroup>\r\n\r\n                                <FormGroup className=\"update-form\">\r\n                                    <Label className=\"product-label\" for=\"price\">\r\n                                        Giá\r\n                                        <span className=\"ml-1 text-danger\">*</span>\r\n                                    </Label>\r\n                                    <Input\r\n                                        autoComplete=\"off\"\r\n                                        className=\"product-form-control\"\r\n                                        id=\"price\"\r\n                                        type=\"number\"\r\n                                        name=\"price\"\r\n                                        onChange={this.handleChange}\r\n                                        // value={productEditing.price ? productEditing.price : price}\r\n                                        value={price}\r\n                                    />\r\n                                    {priceErr && <div className=\"validation\">{priceErr}</div>}\r\n                                </FormGroup>\r\n\r\n                                <FormGroup className=\"update-form\">\r\n                                    <Label className=\"product-label\" for=\"author\">\r\n                                        Tác giả\r\n                                        <span className=\"ml-1 text-danger\">*</span>\r\n                                    </Label>\r\n                                    <Input\r\n                                        autoComplete=\"off\"\r\n                                        className=\"product-form-control\"\r\n                                        id=\"author\"\r\n                                        type=\"text\"\r\n                                        name=\"author\"\r\n                                        onChange={this.handleChange}\r\n                                        // value={productEditing.author ? productEditing.author : author} \r\n                                        value={author}\r\n                                    />\r\n                                    {authorErr && <div className=\"validation\">{authorErr}</div>}\r\n                                </FormGroup>\r\n\r\n                                <FormGroup className=\"update-form\">\r\n                                    <Label className=\"product-label\" for=\"category\">\r\n                                        Danh mục\r\n                                        <span className=\"ml-1 text-danger\">*</span>\r\n                                    </Label>\r\n                                    <Input\r\n                                        autoComplete=\"off\"\r\n                                        className=\"product-form-control\"\r\n                                        id=\"category\"\r\n                                        type=\"select\"\r\n                                        name=\"category\"\r\n                                        onChange={this.handleChange}\r\n                                        value={category}\r\n                                    // value={productEditing.category ? productEditing.category : category}\r\n                                    >\r\n                                        {this.props.category.map(category => <option key={category.name}>{category.name}</option>)}\r\n                                    </Input>\r\n                                    {categoryErr && <div className=\"validation\">{categoryErr}</div>}\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"update-btn\">\r\n                            <Col className=\"p-0 cancle-btn w-100\">\r\n                                <Button className=\"w-100\" onClick={onCloseFormProduct}>Huỷ</Button>\r\n                            </Col>\r\n                            <Col className=\"p-0 submit-btn w-100\">\r\n                                <Button className=\"w-100\" type=\"submit\" onClick={this.handleClickCreateOrUpdateProduct}>{this.isEmpty(productEditing) ? 'Thêm sản phẩm' : 'Update Sản phẩm'}</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProductFunc","import React, { Component } from 'react'\r\nimport Header from '../../components/admin/Header'\r\nimport Nav from '../../components/admin/NavAdmin'\r\nimport Main from '../../components/admin/Main'\r\nimport Product from '../../components/client/Product'\r\nimport ProductFunc from '../../components/admin/ProductFunc'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n    actGetAllProductRequest,\r\n    actFilterProductsAdminRequest,\r\n    actFindProductRequest,\r\n    actFilterProductByNameAdminRequest,\r\n    actToggleFormProduct,\r\n    actGetProductUpdate,\r\n    actResetProductUpdate,\r\n    actDeleteProductRequest,\r\n    actAddProductRequest,\r\n    actUpdateProductRequest,\r\n    actGetAllCategoryRequest,\r\n} from '../../actions/index'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Products extends Component {\r\n    constructor(pros) {\r\n        super(pros)\r\n        this.state = {\r\n            currentPage: 1,\r\n            perPage: 8\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onGetAllCategory()\r\n        this.props.onGetAllProduct()\r\n    }\r\n\r\n    showProducts = (products) => {\r\n        let result = null\r\n        if (products.length > 0) {\r\n            result = products.map((product, index) => {\r\n                return <Product\r\n                    key={index}\r\n                    product={product}\r\n                    type=\"admin\"\r\n                    onOpenFormProduct={this.props.onOpenFormProduct}\r\n                    onGetProductUpdate={this.props.onGetProductUpdate}\r\n                    deleteProduct = {this.props.deleteProduct}\r\n                />\r\n            })\r\n        }\r\n        return result\r\n    }\r\n\r\n    // deleteProduct = (product) => {\r\n    //     // callApi(`api/product/${_id}`,'DELETE',NULL)\r\n    //     console.log(product._id)\r\n    //     if (confirm(`bạn chắc chắn muốn xoá ${product.name}?`)) { //eslint-disable-line\r\n    //         // this.props.onDeleteProduct(id);\r\n    //         callApi(`api/product/${product._id}`,'DELETE',null)\r\n    //     }\r\n    // }\r\n\r\n    paginate = (number) => {\r\n        this.setState({\r\n            currentPage: number\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let adminToken = localStorage.getItem('adminToken')\r\n        if (!adminToken) {\r\n            return <Redirect to=\"/admin/login\" />\r\n        }\r\n        let { currentPage, perPage } = this.state\r\n        let {\r\n            products,\r\n            onFilterProducts,\r\n            onFindProduct,\r\n            onFilterProductsByName,\r\n            onOpenFormProduct,\r\n            isOpenFormProduct,\r\n            onCloseFormProduct,\r\n            productEditing,\r\n            onResetProductUpdate,\r\n            onAddProduct,\r\n            onUpdateProduct,\r\n            isClick,\r\n            category\r\n        } = this.props\r\n        const indexOfLastProduct = currentPage * perPage\r\n        const indexOfFirstProduct = indexOfLastProduct - perPage\r\n        const currentProducts = products.slice(indexOfFirstProduct, indexOfLastProduct)\r\n        return (\r\n            <React.Fragment>\r\n                <Header onOpenFormProduct={onOpenFormProduct} />\r\n                <Nav match={this.props.match} />\r\n                {isOpenFormProduct ?\r\n                    <ProductFunc\r\n                        isOpenFormProduct={isOpenFormProduct}\r\n                        onCloseFormProduct={onCloseFormProduct}\r\n                        productEditing={productEditing}\r\n                        onResetProductUpdate={onResetProductUpdate}\r\n                        onAddProduct={onAddProduct}\r\n                        onUpdateProduct={onUpdateProduct}\r\n                        category={category}\r\n                        // onSetIsClickTrue={onSetIsClickTrue}\r\n                        // isClick={isClick}\r\n                    /> : ''\r\n                }\r\n\r\n                <Main\r\n                    showProducts={this.showProducts}\r\n                    products={currentProducts}\r\n                    perPage={perPage}\r\n                    totalProducts={products.length}\r\n                    paginate={this.paginate}\r\n                    onFilterProducts={onFilterProducts}\r\n                    onFindProduct={onFindProduct}\r\n                    onFilterProductsByName={onFilterProductsByName}\r\n                    category={category}\r\n                />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        products: state.products,\r\n        isOpenFormProduct: state.isOpenFormProduct,\r\n        productEditing: state.productEditing,\r\n        category : state.category\r\n        // isClick: state.isClick\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onGetAllProduct: () => {\r\n            dispatch(actGetAllProductRequest())\r\n        },\r\n        onFilterProducts: (keyword, category, priceType) => {\r\n            dispatch(actFilterProductsAdminRequest(keyword, category, priceType))\r\n        },\r\n        onFindProduct: (name) => {\r\n            dispatch(actFindProductRequest(name))\r\n        },\r\n        onFilterProductsByName: (keyword) => {\r\n            dispatch(actFilterProductByNameAdminRequest(keyword))\r\n        },\r\n        onOpenFormProduct: () => {\r\n            dispatch(actToggleFormProduct())\r\n        },\r\n        onCloseFormProduct: () => {\r\n            dispatch(actToggleFormProduct())\r\n        },\r\n        onGetProductUpdate: (product) => {\r\n            dispatch(actGetProductUpdate(product))\r\n        },\r\n        onResetProductUpdate: () => {\r\n            dispatch(actResetProductUpdate())\r\n        },\r\n        deleteProduct: (product) => {\r\n            dispatch(actDeleteProductRequest(product))\r\n        },\r\n        onAddProduct: (product) => {\r\n            dispatch(actAddProductRequest(product))\r\n        },\r\n        onUpdateProduct: (product) => {\r\n            dispatch(actUpdateProductRequest(product))\r\n        },\r\n        onGetAllCategory: () => {\r\n            dispatch(actGetAllCategoryRequest())\r\n        }\r\n    } \r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Products)","import React, { Component } from 'react'\r\nimport Header from '../../components/admin/Header'\r\nimport Nav from '../../components/admin/NavAdmin'\r\nimport TaskBar from '../../components/admin/TaskBar'\r\nimport { connect } from 'react-redux'\r\nimport { actGetAllOrderRequestAdmin, actFilterOrdersRequest } from '../../actions/index'\r\nimport { Container, Row, Col, Table } from 'reactstrap'\r\nimport '../../css/admin/Orders.css'\r\nimport { Redirect } from 'react-router-dom'\r\nclass Orders extends Component {\r\n    constructor(pros) {\r\n        super(pros)\r\n        this.state = {\r\n            payment: '',\r\n            amount: '',\r\n            keyword_email: ''\r\n        }\r\n    }\r\n\r\n    getKeywordOrders = (keyword) => {\r\n        console.log(keyword)\r\n        this.setState({\r\n            keyword_email: keyword\r\n        })\r\n    }\r\n\r\n    getFilterOrders = (payment, amount) => {\r\n        console.log(payment, amount)\r\n        this.setState({\r\n            payment: payment,\r\n            amount: amount\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onGetAllOrders()\r\n    }\r\n\r\n    // showProducts = (products) => {\r\n    //     let result = null\r\n    //     if (products.length > 0) {\r\n    //         result = products.map((product, index) => {\r\n    //             return <Product key={index} product={product} type=\"admin\" />\r\n    //         })\r\n    //     }\r\n    //     return result\r\n    // }\r\n\r\n    paginate = (number) => {\r\n        this.setState({\r\n            currentPage: number\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let adminToken = localStorage.getItem('adminToken')\r\n        if (!adminToken) {\r\n            return <Redirect to=\"/admin/login\" />\r\n        }\r\n        let { orders, onFilterOrders } = this.props\r\n        let { payment, amount, keyword_email } = this.state\r\n        return (\r\n            <React.Fragment>\r\n                <Header />\r\n                <Nav match={this.props.match} />\r\n                <div className=\"AdminProducts admin-page\">\r\n                    <Container>\r\n                        <React.Fragment>\r\n                            <Row style={{ padding: \"0 15px\" }}>\r\n                                <Col className=\"admin-col mb-4 pb-0\">\r\n                                    <TaskBar\r\n                                        type=\"Orders\"\r\n                                        onFilterOrders={onFilterOrders}\r\n                                        getKeywordOrders={this.getKeywordOrders}\r\n                                        getFilterOrders={this.getFilterOrders}\r\n                                        payment={payment}\r\n                                        amount={amount}\r\n                                        keyword_email={keyword_email}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row style={{ padding: \"0 15px\" }}>\r\n                                <Col\r\n                                    className=\"admin-col p-0\"\r\n                                    style={{\r\n                                        overflow: \"auto\",\r\n                                        maxHeight: \"450px\",\r\n                                    }}\r\n                                >\r\n                                    <Table className=\"admin-table\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Number</th>\r\n                                                <th>Id</th>\r\n                                                <th>Thời gian</th>\r\n                                                <th>Số tiền</th>\r\n                                                <th>Phương thức thanh toán</th>\r\n                                                <th>Email</th>\r\n                                                <th>Phone</th>\r\n                                                <th>Địa chỉ giao hàng</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {\r\n                                                orders.map((order, index) =>\r\n                                                    <tr key={order._id}>\r\n                                                        <td>{index + 1}</td>\r\n                                                        <td>{order._id}</td>\r\n                                                        <td>{order.date}</td>\r\n                                                        <td>${order.totalPrice}</td>\r\n                                                        <td>{order.payment === 'cash' ? 'Cash On Delivery' : 'Online Payment'}</td>\r\n                                                        <td>{order.email}</td>\r\n                                                        <td>{order.phone}</td>\r\n                                                        <td>{order.address}</td>\r\n                                                    </tr>\r\n                                                )\r\n                                            }\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </Col>\r\n                            </Row>\r\n                        </React.Fragment>\r\n                    </Container>\r\n                </div>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        orders: state.order\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onGetAllOrders: () => {\r\n            dispatch(actGetAllOrderRequestAdmin())\r\n        },\r\n        onFilterOrders: (payment_method, amount, email) => {\r\n            dispatch(actFilterOrdersRequest(payment_method, amount, email))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders)","import React, { Component } from 'react'\r\nimport Header from '../../components/admin/Header'\r\nimport Nav from '../../components/admin/NavAdmin'\r\nimport TaskBar from '../../components/admin/TaskBar'\r\nimport { Container, Row, Col, Table } from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\nimport { \r\n    actGetAllCustomersRequest, \r\n    actGetAllOrderRequestAdmin, \r\n    actFilterCustomersRequest,\r\n} from '../../actions/index'\r\nimport { Redirect } from 'react-router-dom'\r\nclass Customers extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.onGetAllCustomers()\r\n        this.props.onGetAllOrders()\r\n    }\r\n\r\n    // paginate = (number) => {\r\n    //     this.setState({\r\n    //         currentPage: number\r\n    //     })\r\n    // }\r\n\r\n    totalAmount = (arr) => {\r\n        let totalAmount = null\r\n        arr.forEach(element => {\r\n            totalAmount += element.totalPrice\r\n        })\r\n        return totalAmount\r\n    }\r\n\r\n    render() {\r\n        let adminToken = localStorage.getItem('adminToken')\r\n        if (!adminToken) {\r\n            return <Redirect to=\"/admin/login\" />\r\n        }\r\n        let { \r\n            customers, \r\n            orders, \r\n            onFilterCustomers,\r\n        } = this.props\r\n        customers.forEach(customer => {\r\n            let result = orders.filter(order => order.email === customer.email)\r\n            let totalOrder = result.length\r\n            let totalAmount = this.totalAmount(result)\r\n            customer.totalOrder = totalOrder\r\n            customer.totalAmount = totalAmount\r\n        });\r\n        return (\r\n            <React.Fragment>\r\n                <Header />\r\n                <Nav match={this.props.match} />\r\n                <div className=\"AdminProducts admin-page\">\r\n                    <Container>\r\n                        <React.Fragment>\r\n                            <Row style={{ padding: \"0 15px\" }}>\r\n                                <Col className=\"admin-col mb-4 pb-0\">\r\n                                    <TaskBar type=\"Customers\" onFilterCustomers={onFilterCustomers} />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row style={{ padding: \"0 15px\" }}>\r\n                                <Col\r\n                                    className=\"admin-col p-0\"\r\n                                    style={{\r\n                                        overflow: \"auto\",\r\n                                        maxHeight: \"450px\",\r\n                                    }}\r\n                                >\r\n                                    <Table className=\"admin-table\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>STT</th>\r\n                                                <th>Id</th>\r\n                                                <th>Tên</th>\r\n                                                <th>Phone</th>\r\n                                                <th>Email</th>\r\n                                                <th>Số đơn hàng</th>\r\n                                                <th>Số tiền</th>\r\n                                                <th>Địa chỉ</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {\r\n                                                customers.map((customer, index) =>\r\n                                                    <tr key={customer._id}>\r\n                                                        <td>{index + 1}</td>\r\n                                                        <td>{customer._id}</td>\r\n                                                        <td>{customer.name}</td>\r\n                                                        <td>{customer.phone}</td>\r\n                                                        <td>{customer.email}</td>\r\n                                                        <td>{customer.totalOrder ? customer.totalOrder : '0'}</td>\r\n                                                        <td>${customer.totalAmount ? customer.totalAmount : '0'}</td>\r\n                                                        <td>{customer.address}</td>\r\n                                                    </tr>\r\n                                                )\r\n                                            }\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </Col>\r\n                            </Row>\r\n                        </React.Fragment>\r\n                    </Container>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        customers: state.customers,\r\n        orders: state.order,\r\n        isOpenFormProduct: state.isOpenFormProduct,\r\n        productEditing: state.productEditing\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onGetAllCustomers: () => {\r\n            dispatch(actGetAllCustomersRequest())\r\n        },\r\n        onGetAllOrders: () => {\r\n            dispatch(actGetAllOrderRequestAdmin())\r\n        },\r\n        onFilterCustomers: (name) => {\r\n            dispatch(actFilterCustomersRequest(name))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Customers)","import React, { Component } from 'react'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowUp } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport '../../css/admin/Statistic.css'\r\n\r\nclass Statistic extends Component {\r\n\r\n    render() {\r\n        let { title, icon, background, color, data } = this.props\r\n        const name = title.split(' ');\r\n        return (\r\n            <div className=\"Statistic admin-col h-100\">\r\n                <div className=\"header\">\r\n                    <div className=\"title\">\r\n                        <div className=\"bt-header\" style={{ color: \"rgb(22, 31, 106)\" }}>\r\n                            {title}\r\n                        </div>\r\n                        {/* <div>(Last 30 Days)</div> */}\r\n                    </div>\r\n                    <div className=\"icon\" style={{ backgroundColor: `${background}`, color: `${color}` }}>\r\n                        <FontAwesomeIcon icon={icon} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"number\">\r\n                    <div className=\"amount\">{title === 'Total Revenue' && \"$\"}{data}</div>\r\n                    <div className=\"up-down\" style={{ color: 'rgb(3, 211, 181)' }}>\r\n                        <div className=\"up\">\r\n                            <FontAwesomeIcon icon={faArrowUp} />\r\n                            {name[1]} up\r\n                        </div>\r\n                        {/* <span>(previous 30 days)</span> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Statistic","import React, { Component } from 'react'\r\nimport Chart from 'react-apexcharts';\r\nimport '../../css/admin/Sale.css'\r\nimport { connect } from 'react-redux'\r\nimport { actGetAllOrderRequestAdmin } from '../../actions/index'\r\n\r\nclass Sale extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.onGetAllOrders()\r\n    }\r\n\r\n    render() {\r\n        let { orders } = this.props\r\n\r\n        let revenue = orders.reduce((result, current) => { // total_revenue\r\n            result += current.totalPrice\r\n            return result\r\n        }, 0)\r\n\r\n        let temp = []\r\n        let result = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n        for (const order of orders) {\r\n            const parts = order.date.split('-');\r\n            // console.log(parts)\r\n            const orderDay = new Date(parts[0] + ' ' + parts[1] + ' ' + parts[2]);\r\n            // console.log(orderDay)\r\n            temp.push({ month: orderDay.getMonth(), totalPrice: order.totalPrice });\r\n        }\r\n        // console.log(temp)\r\n        let months = temp.reduce((accumulator, currentValue) => {\r\n            if (currentValue.month in accumulator) {\r\n                accumulator[currentValue.month]++\r\n            }\r\n            else {\r\n                accumulator[currentValue.month] = 1\r\n            }\r\n            return accumulator\r\n        }, {})\r\n\r\n        // console.log(months)\r\n\r\n        for (let i = 0; i <= 11; i++) {\r\n            for (const month in months) {\r\n                if (i === parseInt(month)) {\r\n                    result[i] = months[month];\r\n                    break\r\n                }\r\n                result[i] = 0\r\n            }\r\n        }\r\n\r\n        // console.log(result)\r\n        const series = [{\r\n            name: 'Sale',\r\n            data: result\r\n        }];\r\n        const options = {\r\n            colors: ['rgba(3, 211, 181, 0.85)'],\r\n            grid: {\r\n                show: false\r\n            },\r\n            chart: {\r\n                toolbar: {\r\n                    show: false\r\n                },\r\n                type: 'bar',\r\n                height: 350,\r\n                foreColor: 'rgb(22, 31, 106)'\r\n            },\r\n            plotOptions: {\r\n                bar: {\r\n                    dataLabels: {\r\n                        style: {\r\n                            fontSize: '16px',\r\n                        }\r\n                    },\r\n                    horizontal: false,\r\n                    columnWidth: '60%'\r\n                },\r\n            },\r\n            dataLabels: {\r\n                enabled: false,\r\n            },\r\n            stroke: {\r\n                show: true,\r\n                width: 2,\r\n                colors: ['transparent']\r\n            },\r\n            xaxis: {\r\n                categories: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\r\n                labels: {\r\n                    style: {\r\n                        fontSize: '16px'\r\n                    }\r\n                }\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    style: {\r\n                        fontSize: '16px'\r\n                    },\r\n                    formatter: (val) => {\r\n                        return Math.trunc(val)\r\n                    }\r\n                }\r\n            },\r\n            fill: {\r\n                opacity: 1,\r\n                colors: ['rgba(3, 211, 181, 0.85)']\r\n            },\r\n            tooltip: {\r\n                fillSeriesColor: false,\r\n                y: {\r\n                    title: {\r\n                        formatter: (seriesName) => seriesName,\r\n                    },\r\n                    formatter: undefined\r\n                }\r\n            }\r\n        };\r\n        return (\r\n            <div className=\"Sale admin-col\">\r\n                <div className=\"header\">\r\n                    <h3 className=\"bt-header\">Lịch sử bán hàng</h3>\r\n                    <div className=\"total\">${revenue}</div>\r\n                </div>\r\n                <Chart options={options} series={series} type=\"bar\" height={350} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        orders: state.order,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onGetAllOrders: () => {\r\n            dispatch(actGetAllOrderRequestAdmin())\r\n        },\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sale)","import React, { Component } from 'react'\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport { faDollarSign, faCartArrowDown, faUserCircle, faTruck } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Statistic from '../../components/admin/Statistic'\r\nimport Header from '../../components/admin/Header'\r\nimport Nav from '../../components/admin/NavAdmin'\r\nimport Sale from '../../components/admin/Sale'\r\nimport '../../css/admin/Admin.css'\r\nimport { connect } from 'react-redux'\r\nimport { actGetAllOrderRequestAdmin, actGetAllCustomersRequest } from '../../actions/index'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass Admin extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.onGetAllOrders()\r\n        this.props.onGetAllCustomers()\r\n    }\r\n\r\n    render() {\r\n        let adminToken = localStorage.getItem('adminToken')\r\n        if (!adminToken) {\r\n            return <Redirect to=\"/admin/login\" />\r\n        }\r\n        let { orders, customers} = this.props\r\n        let revenue = orders.reduce((result, current) => {\r\n            result += current.totalPrice\r\n            return result\r\n        }, 0)\r\n        const statistics = [\r\n            { title: 'Tổng thu nhập', icon: faDollarSign, background: 'rgb(255, 232, 178)', color: 'rgb(255, 179, 0)', data: revenue },\r\n            { title: 'Tổng đơn hàng', icon: faCartArrowDown, background: 'rgb(250, 202, 202)', color: 'rgb(255, 110, 110)', data: orders.length },\r\n            { title: 'Số khách hàng', icon: faUserCircle, background: 'rgb(209, 249, 245)', color: 'rgb(39, 199, 183)', data: customers.length },\r\n            { title: 'Tổng giao hàng', icon: faTruck, background: 'rgb(248, 218, 194)', color: 'rgb(255, 129, 29)', data: orders.length },\r\n        ];\r\n        return (\r\n            <React.Fragment>\r\n                <Header/>\r\n                <Nav match={this.props.match} />\r\n                <div className=\"Admin admin-page\">\r\n                    <Container>\r\n                        <Row>\r\n                            {\r\n                                statistics.map(statistic =>\r\n                                    <Col xl=\"3\" lg=\"6\" md=\"6\" className=\"mb-4\" key={statistic.title}>\r\n                                        <Statistic\r\n                                            title={statistic.title}\r\n                                            icon={statistic.icon}\r\n                                            color={statistic.color}\r\n                                            background={statistic.background}\r\n                                            data={statistic.data}\r\n                                        />\r\n                                    </Col>\r\n                                )\r\n                            }\r\n                        </Row>\r\n                        <Row>\r\n                            <Col className=\"mb-4\">\r\n                                <Sale revenue={revenue} orders={orders} />\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </div>\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        orders: state.order,\r\n        customers: state.customers,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onGetAllOrders: () => {\r\n            dispatch(actGetAllOrderRequestAdmin())\r\n        },\r\n        onGetAllCustomers: () => {\r\n            dispatch(actGetAllCustomersRequest())\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Admin)","import React, { Component } from 'react';\r\nimport '../../css/admin/CategoryFunc.css'\r\nimport { Container, Row, Col, Form, FormGroup, Input, Label, Button } from 'reactstrap'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n// import { connect } from 'react-redux'\r\n// import { actToggleFormCategory } from '../../actions';\r\n\r\nclass CategoryFunc extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            name: '',\r\n            nameErr : ''\r\n        }\r\n    }\r\n\r\n    validateFn = (input = '', info = '') => {\r\n        if (!input) {\r\n            return `The ${info} field is required.`\r\n        }\r\n        // if (info !== 'price' && info !== 'category') {\r\n        //     if (input.length < 6) {\r\n        //         return `${info.charAt(0).toUpperCase() + info.slice(1)} must be at least 5 characters.`\r\n        //     }\r\n        // }\r\n\r\n        return '';\r\n    }\r\n\r\n    validate = (name) => {\r\n        const nameErr = this.validateFn(name, 'name') || '';\r\n        if (nameErr) {\r\n            this.setState({\r\n                nameErr: nameErr,\r\n            })\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n\r\n\r\n    handleChange = (e) => {\r\n        let target = e.target\r\n        let name = target.name\r\n        let value = target.value\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    handleClick = async (e) => {\r\n        e.preventDefault()\r\n        let {name} = this.state\r\n        let isvalid = this.validate(name)\r\n        console.log(isvalid)\r\n        let data = {\r\n            name : name \r\n        }\r\n        if(isvalid) {\r\n            this.props.onAddCategory(data)\r\n            this.props.onToggleFormCategory()\r\n        }\r\n    }\r\n    render() {\r\n        let {onToggleFormCategory} = this.props\r\n        let {name,nameErr} = this.state\r\n        return ( \r\n            <div className=\"ProductFuncBackground\">\r\n                <Container className=\"ProductFunc\">\r\n                    <Row style={{\r\n                        position: \"fixed\",\r\n                        top: \"0\",\r\n                        width: \"100%\",\r\n                        left: \"0\",\r\n                        right: \"0\",\r\n                        margin: \"0\",\r\n                        padding: \"50px 35px 0 70px\",\r\n                    }}>\r\n                        <Col className=\"d-flex justify-content-between p-0\">\r\n                            <h3\r\n                                className=\"bt-header mb-5\"\r\n                                style={{ fontSize: \"18px\", color: \"rgb(22,31,106)\" }}\r\n                            >\r\n                                {/* {this.isEmpty(productEditing) ? 'Add Product' : 'Update Product'} */}\r\n                                Thêm danh mục\r\n                            </h3>\r\n                            <FontAwesomeIcon icon={faTimes} onClick={onToggleFormCategory}/>\r\n                        </Col>\r\n                    </Row>\r\n                    <Form style={{ height: '100%', overflow: 'scroll' }}>\r\n                        <Row className=\"w-100 m-0\">\r\n                            <Col xl=\"4\" style={{ padding: \"30px\" }}>\r\n                                <span className=\"product-title\">\r\n                                    Thêm mô tả danh mục của bạn và thông tin cần thiết tại đây.\r\n                                </span>\r\n                            </Col>\r\n                            <Col className=\"product-background\">\r\n                                <FormGroup className=\"update-form\">\r\n                                    <Label className=\"product-label\" for=\"name\">\r\n                                        Tên danh mục\r\n                                        <span className=\"ml-1 text-danger\">*</span>\r\n                                    </Label>\r\n                                    <Input\r\n                                        autoComplete=\"off\"\r\n                                        className=\"product-form-control\"\r\n                                        id=\"name\"\r\n                                        type=\"text\"\r\n                                        name=\"name\"\r\n                                        onChange={this.handleChange}\r\n                                        // value={productEditing.name ? productEditing.name : name}\r\n                                        value={name}\r\n                                    />\r\n                                    {nameErr && <div className=\"validation\">{nameErr}</div>}\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"update-btn\">\r\n                            <Col className=\"p-0 cancle-btn w-100\">\r\n                                <Button className=\"w-100\" onClick={onToggleFormCategory}>Huỷ</Button>\r\n                            </Col>\r\n                            <Col className=\"p-0 submit-btn w-100\">\r\n                                <Button className=\"w-100\" type=\"submit\" onClick={this.handleClick}>Thêm danh mục</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default CategoryFunc;","import React, { Component } from 'react';\r\nimport Header from '../../components/admin/Header'\r\nimport Nav from '../../components/admin/NavAdmin'\r\nimport TaskBar from '../../components/admin/TaskBar'\r\nimport CategoryFunc from '../../components/admin/CategoryFunc'\r\nimport { Container, Row, Col, Table } from 'reactstrap'\r\nimport { connect } from 'react-redux';\r\nimport {actAddCategoryRequest, actDeleteCategoryRequest, actFilterCategoryAdminRequest, actGetAllCategoryRequest, actToggleFormCategory} from '../../actions'\r\nimport ButtonDelete from '../../components/admin/ButtonDelete'\r\n\r\nclass Category extends Component {\r\n    componentDidMount() {\r\n        this.props.onGetAllCategory()\r\n    }\r\n\r\n    render() {\r\n        let {\r\n            isOpenFormCategory,\r\n            onToggleFormCategory,\r\n            category,\r\n            onAddCategory,\r\n            onDeleteCategory,\r\n            onFilterCategory\r\n        } = this.props\r\n        // console.log(category)\r\n        return (\r\n            <React.Fragment>\r\n                <Header/>\r\n                <Nav match={this.props.match}/>\r\n                {isOpenFormCategory ? \r\n                    <CategoryFunc \r\n                        onToggleFormCategory={onToggleFormCategory}\r\n                        onAddCategory={onAddCategory}\r\n                        onToggleFormCategory={onToggleFormCategory}\r\n                        \r\n                /> : ''}\r\n                <div className=\"AdminProducts admin-page\">\r\n                    <Container>\r\n                        <React.Fragment>\r\n                            <Row style={{ padding: \"0 15px\" }}>\r\n                                <Col className=\"admin-col mb-4 pb-0\">\r\n                                    <TaskBar\r\n                                        type=\"Category\"\r\n                                        onToggleFormCategory={onToggleFormCategory}\r\n                                        onFilterCategory={onFilterCategory}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row style={{ padding: \"0 15px\" }}>\r\n                                <Col\r\n                                    className=\"admin-col p-0\"\r\n                                    style={{\r\n                                        overflow: \"auto\",\r\n                                        maxHeight: \"450px\",\r\n                                    }}\r\n                                >\r\n                                    <Table className=\"admin-table\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>STT</th>\r\n                                                <th>Id danh mục</th>\r\n                                                <th>Tên danh mục</th>\r\n                                                <th>Hành động</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {\r\n                                                category.map((category, index) =>\r\n                                                    <tr key={category._id}>\r\n                                                        <td>{index + 1}</td>\r\n                                                        <td>{category._id}</td>\r\n                                                        <td>{category.name}</td>\r\n                                                        <td><ButtonDelete type='category' id={category._id} onDeleteCategory={onDeleteCategory}/></td>\r\n                                                    </tr>\r\n                                                )\r\n                                            }\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </Col>\r\n                            </Row>\r\n                        </React.Fragment>\r\n                    </Container>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isOpenFormCategory: state.isOpenFormCategory,\r\n        category : state.category\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onToggleFormCategory : () => {\r\n            dispatch(actToggleFormCategory())\r\n        },\r\n        onGetAllCategory : () => {\r\n            dispatch(actGetAllCategoryRequest())\r\n        },\r\n        onAddCategory : (data) => {\r\n            dispatch(actAddCategoryRequest(data))\r\n        },\r\n        onDeleteCategory : (id) => {\r\n            dispatch(actDeleteCategoryRequest(id))\r\n        },\r\n        onFilterCategory : (name) => {\r\n            dispatch(actFilterCategoryAdminRequest(name))\r\n        }\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Category);","import React from 'react'\r\nimport Detail from './pages/client/Detail'\r\nimport Home from './pages/client/Home'\r\nimport Checkout from './pages/client/Checkout'\r\nimport OrderReceived from './pages/client/OderReceived'\r\nimport Orders from './pages/client/Orders'\r\nimport UserProfile from './pages/client/UserProfile'\r\nimport AdminLogin from './pages/admin/AdminLogin'\r\nimport Products from './pages/admin/Products'\r\nimport OrdersAdmin from './pages/admin/Orders'\r\nimport Customers from './pages/admin/Customers'\r\nimport Admin from './pages/admin/Admin'\r\nimport Category from './pages/admin/Category'\r\nconst routes = [\r\n    {\r\n        path: '/',\r\n        exact: true,\r\n        main: () => <Home />\r\n    },\r\n    {\r\n        path: '/product/:id',\r\n        exact: true,\r\n        main: (match) => <Detail match={match} />\r\n    },\r\n    {\r\n        path: '/checkout',\r\n        exact: true,\r\n        main: (history) => <Checkout history={history} />\r\n    },\r\n    {\r\n        path: '/order-received/:id',\r\n        exact: true,\r\n        main: (match) => <OrderReceived match={match} />\r\n    },\r\n    {\r\n        path: '/order',\r\n        exact: true,\r\n        main: () => <Orders />\r\n    },\r\n    {\r\n        path: '/profile',\r\n        exact: true,\r\n        main: () => <UserProfile />\r\n    },\r\n    {\r\n        path: '/admin',\r\n        exact: true,\r\n        main: (match) => <Admin match={match} />\r\n    },\r\n    {\r\n        path: '/admin/login',\r\n        exact: true,\r\n        main: () => <AdminLogin />\r\n    },\r\n    {\r\n        path: '/admin/products',\r\n        exact: true,\r\n        main: (match) => <Products match={match} />\r\n    },\r\n    {\r\n        path: '/admin/orders',\r\n        exact: true,\r\n        main: (match) => <OrdersAdmin match={match} />\r\n    },\r\n    {\r\n        path: '/admin/customers',\r\n        exact: true,\r\n        main: (match) => <Customers match={match} />\r\n    },\r\n    {\r\n        path: '/admin/category',\r\n        exact: true,\r\n        main: (match) => <Category match={match} />\r\n    },\r\n]\r\n\r\nexport default routes","import * as Types from '../constants/ActionTypes'\r\n\r\nlet initialstate = false\r\n\r\nconst statusCartitem = (state = initialstate, actions) => {\r\n\r\n    switch (actions.type) {\r\n        case Types.OPEN_CARTITEM:\r\n            state = !state\r\n            console.log(state)\r\n            return state\r\n        case Types.CLOSE_CARTITEM:\r\n            state = !state\r\n            return state\r\n        case Types.CARTBTN_CLICK:\r\n            state = true\r\n            // setTimeout(() => {\r\n            //     return state = false\r\n            // }, 2000)\r\n            // console.log(state)\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default statusCartitem","import * as Types from '../constants/ActionTypes'\r\n\r\nlet initialstate = 'signin'\r\n\r\nconst changeForm = (state = initialstate, actions) => {\r\n    switch (actions.type) {\r\n        case Types.OPEN_FORM_SIGNUP:\r\n            state = 'signup'\r\n            return state\r\n        case Types.OPEN_FORM_SIGNIN:\r\n            state = 'signin'\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default changeForm","import * as Types from '../constants/ActionTypes'\r\n\r\n// let data = localStorage.getItem('products')\r\n\r\n// let initialstate = data ? JSON.parse(data) : []\r\nlet initialstate = []\r\n\r\nlet findIndex = (products, id) => {\r\n    var result = -1;\r\n    products.forEach((product, index) => {\r\n        if (product._id === id) {\r\n            result = index;\r\n        }\r\n    });\r\n    return result\r\n}\r\n\r\nconst products = (state = initialstate, actions) => {\r\n    switch (actions.type) {\r\n        case Types.GET_ALL_PRODUCT:\r\n            // console.log('delete')\r\n            state = actions.products\r\n            // localStorage.setItem('products', JSON.stringify(state))\r\n            return [...state]\r\n        case Types.FILTER_CATEGORY:\r\n            state = actions.products\r\n            // console.log(state)\r\n            return [...state]\r\n        case Types.FIND_PRODUCT:\r\n            state = actions.product\r\n            // console.log(state)\r\n            return [...state]\r\n        case Types.GET_ONE_PRODUCT:\r\n            let { id } = actions\r\n            let result = state.find(product => product._id === id)\r\n            // console.log(result)\r\n            return result\r\n        case Types.FILTER_PRODUCTS_ADMIN:\r\n            state = actions.products\r\n            return [...state]\r\n        case Types.FILTER_PRODUCTS_BY_NAME:\r\n            state = actions.products\r\n            return [...state]\r\n        case Types.DELETE_PRODUCT:\r\n            let index = findIndex(state,actions.product._id)\r\n            // console.log(index)\r\n            state.splice(index,1)\r\n            return [...state]\r\n        case Types.ADD_PRODUCT:\r\n            state.push(actions.product)\r\n            return [...state]\r\n        case Types.UPDATE_PRPODUCT:\r\n            let indexProductUpdate = findIndex(state,actions.product._id)\r\n            state[indexProductUpdate] = actions.product\r\n            // state.splice(indexProductUpdate,1)\r\n            // let newProduct = actions.product\r\n            // state.push(newProduct)\r\n            // console.log(state[indexProductUpdate])\r\n            return [...state]\r\n        default:\r\n            return [...state]\r\n    }\r\n}\r\n\r\nexport default products\r\n\r\n","import * as Types from '../constants/ActionTypes'\r\n\r\nlet cartItem = localStorage.getItem('cart')\r\n\r\nlet initialstate = cartItem ? JSON.parse(cartItem) : []\r\n\r\nlet findProductInState = (state, product) => {\r\n    let index = -1\r\n    for (let i = 0; i < state.length; i++) {\r\n        if (state[i].product._id === product._id) {\r\n            index = i\r\n            break\r\n        }\r\n    }\r\n    return index\r\n}\r\n\r\nconst cart = (state = initialstate, actions) => {\r\n    let index = -1\r\n    let { product } = actions\r\n    switch (actions.type) {\r\n        case Types.ADD_TO_CART:\r\n            index = findProductInState(state, product)\r\n            if (index !== -1) {\r\n                state[index].quantity += 1\r\n            }\r\n            else {\r\n                state.push({\r\n                    product,\r\n                    quantity: 1\r\n                })\r\n            }\r\n            localStorage.setItem('cart', JSON.stringify(state))\r\n            return [...state]\r\n        case Types.DECREASE_CART:\r\n            index = findProductInState(state, product)\r\n            state[index].quantity -= 1\r\n            if (state[index].quantity === 0) {\r\n                state.splice(index, 1)\r\n            }\r\n            localStorage.setItem('cart', JSON.stringify(state))\r\n            return [...state]\r\n        case Types.DELETE_CART:\r\n            index = findProductInState(state, product)\r\n            state.splice(index, 1)\r\n            localStorage.setItem('cart', JSON.stringify(state))\r\n            return [...state]\r\n        case Types.REMOVE_ALL_CART:\r\n            state = []\r\n            return [...state]\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default cart","import * as Types from '../constants/ActionTypes'\r\n\r\nlet initialstate = false\r\n\r\nconst statusProfileForm = (state = initialstate, actions) => {\r\n    switch (actions.type) {\r\n        case Types.TOGGLE_PROFILE_FORM:\r\n            state = !state\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default statusProfileForm","import * as Types from '../constants/ActionTypes'\r\n\r\nlet userLogin = localStorage.getItem('user')\r\n\r\nlet initialstate = userLogin ? JSON.parse(userLogin) : {}\r\n\r\nconst user = (state = { ...initialstate }, actions) => {\r\n    let { user } = actions\r\n    switch (actions.type) {\r\n        case Types.LOGIN:\r\n            state = user\r\n            console.log(state)\r\n            localStorage.setItem('user', JSON.stringify(user))\r\n            return { ...state }\r\n        case Types.LOGOUT:\r\n            state = {}\r\n            localStorage.removeItem('user')\r\n            return { ...state }\r\n        case Types.UPDATE_USERPROFILE:\r\n            state = user\r\n            localStorage.setItem('user', JSON.stringify(user))\r\n            return { ...state }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default user","import * as Types from '../constants/ActionTypes'\r\n\r\n// let orders = localStorage.getItem('orders')\r\n\r\n// let initialstate = orders ? JSON.parse(orders) : []\r\n\r\nlet initialstate = []\r\n\r\n\r\nconst order = (state = initialstate, actions) => {\r\n    let { order, orders } = actions\r\n    switch (actions.type) {\r\n        case Types.CREATE_ORDER:\r\n            state.push(order)\r\n            console.log(state)\r\n            // localStorage.setItem('orders', JSON.stringify(state))\r\n            return [...state]\r\n        case Types.GET_ALL_ORDER:\r\n            console.log(orders)\r\n            state = orders\r\n            console.log(state)\r\n            return [...state]\r\n        case Types.GET_ALL_ORDER_ADMIN:\r\n            state = orders\r\n            return [...state]\r\n        case Types.FILTER_ORDERS:\r\n            state = orders\r\n            return [...state]\r\n        default:\r\n            return [...state]\r\n    }\r\n}\r\n\r\nexport default order","import * as Types from '../constants/ActionTypes'\r\n\r\nlet initialstate = false\r\n\r\nconst isCheckout = (state = initialstate, actions) => {\r\n    switch (actions.type) {\r\n        case Types.CHECKOUT_CLICK:\r\n            state = !state\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default isCheckout","import * as Types from '../constants/ActionTypes'\r\n\r\nlet initialstate = []\r\n\r\nconst customers = (state = initialstate, actions) => {\r\n    let { customers } = actions\r\n    switch (actions.type) {\r\n        case Types.GET_ALL_CUSTOMERS:\r\n            state = customers\r\n            return [...state]\r\n        case Types.FILTER_CUSTOMERS:\r\n            state = customers\r\n            return [...state]\r\n        default:\r\n            return [...state]\r\n    }\r\n}\r\n\r\nexport default customers","import * as Types from '../constants/ActionTypes'\r\n\r\nlet initialstate = false\r\n\r\nconst isOpenFormProduct = (state = initialstate, actions) => {\r\n    switch (actions.type) {\r\n        case Types.TOGGLE_FORM_PRODUCT:\r\n            state = !state\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default isOpenFormProduct","import * as Types from '../constants/ActionTypes'\r\n\r\nlet initialstate = false\r\n\r\nconst isOpenFormCategory = (state = initialstate, actions) => {\r\n    switch (actions.type) {\r\n        case Types.TOGGLE_FORM_CATEGORY:\r\n            state = !state\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default isOpenFormCategory","import * as Types from '../constants/ActionTypes'\r\n\r\nlet initialstate = {}\r\n\r\nconst productEditing = (state = initialstate, actions) => {\r\n    switch (actions.type) {\r\n        case Types.GET_PRODUCT_UPDATE:\r\n            state = actions.product\r\n            return { ...state }\r\n        case Types.RESET_PRODUCT_UPDATE:\r\n            state = {}\r\n            return { ...state }\r\n        default:\r\n            return { ...state }\r\n    }\r\n}\r\n\r\nexport default productEditing","import * as Types from '../constants/ActionTypes'\r\n\r\n\r\nlet initialstate = []\r\n\r\nlet findIndex = (category, id) => {\r\n    var result = -1;\r\n    category.forEach((item, index) => {\r\n        if (item._id === id) {\r\n            result = index;\r\n        }\r\n    });\r\n    return result\r\n}\r\n\r\nconst category = (state = initialstate, actions) => {\r\n    switch (actions.type) {\r\n        case Types.GET_ALL_CATEGORY:\r\n            console.log(actions.category)\r\n            state = actions.category\r\n            return [...state]\r\n        case Types.ADD_CATEGORY:\r\n            let newCategory = actions.category\r\n            state.push(newCategory)\r\n            return [...state]\r\n        case Types.DELETE_CATEGORY:\r\n            let index = findIndex(state,actions.category._id)\r\n            state.splice(index,1)\r\n            return [...state]\r\n        case Types.FILTER_CATEGORY_ADMIN:\r\n            let category = actions.category\r\n            state = category\r\n            return [...state]\r\n        default:\r\n            return [...state]\r\n    }\r\n}\r\n\r\nexport default category\r\n\r\n","import { combineReducers } from 'redux'\r\nimport statusCartItem from './toggleCartitem'\r\nimport Form from './changeForm'\r\nimport products from './products'\r\nimport cart from './cart'\r\nimport statusProfileForm from './toggleProfileForm'\r\nimport user from './user'\r\nimport order from './order'\r\nimport isCheckout from './isCheckout'\r\nimport customers from './customers'\r\nimport isOpenFormProduct from './isOpenFormProduct'\r\nimport isOpenFormCategory from './isOpenFormCategory'\r\nimport productEditing from './productEditing'\r\nimport category from './category'\r\n\r\nconst appReducers = combineReducers({\r\n    statusCartItem,\r\n    Form,\r\n    products,\r\n    cart,\r\n    statusProfileForm,\r\n    user,\r\n    order,\r\n    isCheckout,\r\n    customers,\r\n    isOpenFormProduct,\r\n    productEditing,\r\n    isOpenFormCategory,\r\n    category\r\n})\r\n\r\nexport default appReducers;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport './css/client/Cart.css'\r\nimport routes from './routes'\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport appReducers from './reducers'\r\nimport {\r\n    BrowserRouter,\r\n    Switch,\r\n    Route,\r\n    // Link\r\n} from \"react-router-dom\";\r\nimport thunk from 'redux-thunk'\r\n\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { Elements } from '@stripe/react-stripe-js';\r\nconst stripePromise = loadStripe('pk_test_51HO2ZoBA7xz6XAIm0VnMgBMrLzNHB3nZ4FYKrjBY1pGVViGQzxgHw1f3kcFRdYsKT99OgMFJJUEPUdhMzbzf5BK500Ot5FoLhR');\r\n\r\nconst store = createStore(appReducers, applyMiddleware(thunk))\r\n\r\nclass App extends Component {\r\n    showContentMenus = (routes) => {    \r\n        var result = null;\r\n        if (routes.length > 0) {\r\n            result = routes.map((route, index) => {\r\n                return <Route\r\n                    key={index}\r\n                    path={route.path}\r\n                    exact={route.exact}\r\n                    component={route.main}\r\n                />\r\n            })\r\n        }\r\n        return <Switch>{result}</Switch>\r\n    }\r\n    render() {\r\n        return (\r\n            <Elements stripe={stripePromise}>\r\n                <Provider store={store}>\r\n                    <BrowserRouter>\r\n                        <div className=\"App\">\r\n                            {this.showContentMenus(routes)}\r\n                        </div>\r\n                    </BrowserRouter>\r\n                </Provider>\r\n            </Elements>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}